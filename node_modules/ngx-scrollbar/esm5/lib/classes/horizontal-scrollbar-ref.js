/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { RtlScrollAxisType } from '@angular/cdk/platform';
import { ScrollbarRef } from './scrollbar-ref';
var HorizontalScrollbarRef = /** @class */ (function (_super) {
    tslib_1.__extends(HorizontalScrollbarRef, _super);
    function HorizontalScrollbarRef(scrollbarRef, document, trackRef, thumbRef, platform, destroyed, dir) {
        var _this = _super.call(this, scrollbarRef, document, trackRef, thumbRef, platform, destroyed) || this;
        _this.scrollbarRef = scrollbarRef;
        _this.document = document;
        _this.platform = platform;
        _this.destroyed = destroyed;
        _this.dir = dir;
        return _this;
    }
    Object.defineProperty(HorizontalScrollbarRef.prototype, "scrollSize", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.viewElement.scrollWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HorizontalScrollbarRef.prototype, "viewportSize", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.viewElement.clientWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HorizontalScrollbarRef.prototype, "trackSize", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.trackElement.clientWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HorizontalScrollbarRef.prototype, "thumbSize", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.thumbElement.clientWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HorizontalScrollbarRef.prototype, "scrollOffset", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.viewElement.scrollLeft;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HorizontalScrollbarRef.prototype, "dragOffset", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.trackElement.getBoundingClientRect().left;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HorizontalScrollbarRef.prototype, "dragStartOffset", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.thumbElement.getBoundingClientRect().left;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HorizontalScrollbarRef.prototype, "pageProperty", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return 'pageX';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HorizontalScrollbarRef.prototype, "clientProperty", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return 'clientX';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @param {?} position
     * @param {?} trackMax
     * @return {?}
     */
    HorizontalScrollbarRef.prototype._handleThumbPosition = /**
     * @private
     * @param {?} position
     * @param {?} trackMax
     * @return {?}
     */
    function (position, trackMax) {
        if (this.dir.value === 'rtl') {
            if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {
                return -position;
            }
            if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {
                return position - trackMax;
            }
            // Keeping this as a memo
            // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {
            //   return position;
            // }
        }
        return position;
    };
    /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    HorizontalScrollbarRef.prototype.handleDragPosition = /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    function (position) {
        if (this.dir.value === 'rtl') {
            if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {
                return position - this.scrollMax;
            }
            if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {
                return this.scrollMax - position;
            }
            // Keeping this as a memo
            // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {
            //   return position;
            // }
        }
        return position;
    };
    /**
     * @protected
     * @return {?}
     */
    HorizontalScrollbarRef.prototype.scrolled = /**
     * @protected
     * @return {?}
     */
    function () {
        return this.scrollbarRef.horizontalScrolled;
    };
    /**
     * @protected
     * @param {?} size
     * @param {?} position
     * @param {?=} trackMax
     * @return {?}
     */
    HorizontalScrollbarRef.prototype.applyThumbStyle = /**
     * @protected
     * @param {?} size
     * @param {?} position
     * @param {?=} trackMax
     * @return {?}
     */
    function (size, position, trackMax) {
        this.thumbElement.style.width = size + "px";
        this.thumbElement.style.transform = "translate3d(" + this._handleThumbPosition(position, trackMax) + "px, 0, 0)";
    };
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    HorizontalScrollbarRef.prototype.mapToScrollToOption = /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return { left: value };
    };
    /**
     * @protected
     * @param {?} point
     * @return {?}
     */
    HorizontalScrollbarRef.prototype.scrollTo = /**
     * @protected
     * @param {?} point
     * @return {?}
     */
    function (point) {
        this.viewElement.scrollLeft = point;
    };
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    HorizontalScrollbarRef.prototype.setHovered = /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.scrollbarRef.setHovered({ horizontalHovered: value });
    };
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    HorizontalScrollbarRef.prototype.setDragging = /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.scrollbarRef.setDragging({ horizontalDragging: value });
    };
    return HorizontalScrollbarRef;
}(ScrollbarRef));
export { HorizontalScrollbarRef };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    HorizontalScrollbarRef.prototype.scrollbarRef;
    /**
     * @type {?}
     * @protected
     */
    HorizontalScrollbarRef.prototype.document;
    /**
     * @type {?}
     * @protected
     */
    HorizontalScrollbarRef.prototype.platform;
    /**
     * @type {?}
     * @protected
     */
    HorizontalScrollbarRef.prototype.destroyed;
    /**
     * @type {?}
     * @protected
     */
    HorizontalScrollbarRef.prototype.dir;
}
//# sourceMappingURL=data:application/json;base64,