import { AfterContentInit, OnDestroy, NgZone } from '@angular/core';
import { Platform } from '@angular/cdk/platform';
import { Observable } from 'rxjs';
import { NgScrollbar } from '../ng-scrollbar';
/**
 * Factory that initialize the ResizeObserver if available in the browser
 * Otherwise, it lazy-loads the ResizeObserver polyfill
 */
export declare class ResizeObserverFactory {
    private readonly resizeObserverSource;
    readonly resizeObserverLoader: Observable<any>;
    constructor(document: any, platform: Platform);
}
export declare class ResizeSensor implements AfterContentInit, OnDestroy {
    private zone;
    private platform;
    private resizeObserverFactory;
    private scrollbar;
    /** Debounce interval for emitting the changes. */
    debounce: number;
    private _debounce;
    /** Whether ResizeObserver is disabled. */
    disabled: any;
    private _disabled;
    private _subscription;
    private _resizeObserver;
    constructor(zone: NgZone, platform: Platform, resizeObserverFactory: ResizeObserverFactory, scrollbar: NgScrollbar);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    private _createObserver;
    private _subscribe;
    private _unsubscribe;
}
