{"version":3,"file":"ngx-scrollbar.js","sources":["ng://ngx-scrollbar/lib/scroll-viewport.ts","ng://ngx-scrollbar/lib/ng-scrollbar.model.ts","ng://ngx-scrollbar/lib/utils/scrollbar-manager.ts","ng://ngx-scrollbar/lib/utils/native-scrollbar-size-factory.ts","ng://ngx-scrollbar/lib/ng-scrollbar.ts","ng://ngx-scrollbar/lib/classes/scrollbar-ref.ts","ng://ngx-scrollbar/lib/classes/horizontal-scrollbar-ref.ts","ng://ngx-scrollbar/lib/classes/vertical-scrollbar-ref.ts","ng://ngx-scrollbar/lib/scrollbar-control/scrollbar-control.ts","ng://ngx-scrollbar/lib/utils/css-variable.pipe.ts","ng://ngx-scrollbar/lib/utils/ng-attr.directive.ts","ng://ngx-scrollbar/lib/utils/resize-sensor.directive.ts","ng://ngx-scrollbar/lib/ng-scrollbar.module.ts"],"sourcesContent":["import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[scrollViewport], [scroll-viewport]',\r\n  host: {\r\n    '[class.ng-scroll-viewport]': 'true'\r\n  }\r\n})\r\nexport class ScrollViewport {\r\n  constructor(public viewPort: ElementRef) {\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport type ScrollbarAppearance = 'standard' | 'compact' | undefined;\r\nexport type ScrollbarTrack = 'vertical' | 'horizontal' | 'all' | undefined;\r\nexport type ScrollbarVisibility = 'hover' | 'always' | 'native' | undefined;\r\nexport type ScrollbarPosition = 'native' | 'invertY' | 'invertX' | 'invertAll' | undefined;\r\n\r\nexport const NG_SCROLLBAR_OPTIONS = new InjectionToken<NgScrollbarOptions>('NG_SCROLLBAR_OPTIONS');\r\n\r\nexport interface NgScrollbarOptions {\r\n  /**\r\n   * Sets the scroll axis of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar-control\r\n   * - `horizontal` Use both vertical and horizontal scrollbar-control\r\n   * - `all` Use both vertical and horizontal scrollbar-control\r\n   */\r\n  track?: ScrollbarTrack;\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar-control\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  visibility?: ScrollbarVisibility;\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar-control.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  appearance?: ScrollbarAppearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar-control.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar-control positions\r\n   */\r\n  position?: ScrollbarPosition;\r\n  /** A class forwarded to scrollable viewport element */\r\n  viewClass?: string;\r\n  /** A class forwarded to the scrollbar track element */\r\n  trackClass?: string;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  thumbClass?: string;\r\n  /** The minimum scrollbar thumb size in px */\r\n  minThumbSize?: number;\r\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\r\n  trackClickScrollDuration?: number;\r\n  /** A flag used to enable/disable the scrollbar track clicked event */\r\n  trackClickDisabled?: boolean;\r\n  /** A flag used to enable/disable the scrollbar thumb dragged event */\r\n  thumbDragDisabled?: boolean;\r\n  /** Debounce interval for detecting changes via window.resize event */\r\n  windowResizeDebounce?: number;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  sensorDebounce?: number;\r\n  /** Whether ResizeObserver is disabled */\r\n  sensorDisabled?: boolean;\r\n}\r\n\r\n/**\r\n * Set of attributes added on the scrollbar wrapper\r\n */\r\nexport interface NgScrollbarState {\r\n  position?: ScrollbarPosition;\r\n  track?: ScrollbarTrack;\r\n  appearance?: ScrollbarAppearance;\r\n  visibility?: ScrollbarVisibility;\r\n  disabled?: boolean;\r\n  dir?: 'rtl' | 'ltr';\r\n  verticalUsed?: boolean;\r\n  horizontalUsed?: boolean;\r\n  isVerticallyScrollable?: boolean;\r\n  isHorizontallyScrollable?: boolean;\r\n  verticalHovered?: boolean;\r\n  horizontalHovered?: boolean;\r\n  verticalDragging?: boolean;\r\n  horizontalDragging?: boolean;\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { NG_SCROLLBAR_OPTIONS, NgScrollbarOptions } from '../ng-scrollbar.model';\r\n\r\nconst defaultOptions: NgScrollbarOptions = {\r\n  viewClass: '',\r\n  trackClass: '',\r\n  thumbClass: '',\r\n  track: 'vertical',\r\n  appearance: 'compact',\r\n  visibility: 'native',\r\n  position: 'native',\r\n  thumbDragDisabled: false,\r\n  trackClickDisabled: false,\r\n  trackClickScrollDuration: 300,\r\n  minThumbSize: 20,\r\n  windowResizeDebounce: 0,\r\n  sensorDebounce: 0,\r\n  sensorDisabled: false\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ScrollbarManager {\r\n  readonly globalOptions: NgScrollbarOptions;\r\n\r\n  readonly rtlScrollAxisType: RtlScrollAxisType;\r\n\r\n  constructor(@Optional() @Inject(NG_SCROLLBAR_OPTIONS) options: NgScrollbarOptions) {\r\n    this.globalOptions = options ? { ...defaultOptions, ...options } : defaultOptions;\r\n\r\n    this.rtlScrollAxisType = getRtlScrollAxisType();\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { BehaviorSubject, fromEvent, Observable, of } from 'rxjs';\r\nimport { debounceTime, tap, switchMap } from 'rxjs/operators';\r\nimport { ScrollbarManager } from './scrollbar-manager';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NativeScrollbarSizeFactory {\r\n  private _nativeScrollbarSize: BehaviorSubject<number>;\r\n  nativeScrollbarSize: Observable<number>;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: any,\r\n              private manager: ScrollbarManager,\r\n              private platform: Platform) {\r\n    if (platform.isBrowser) {\r\n      of(null).pipe(\r\n        tap(() => this._nativeScrollbarSize = new BehaviorSubject<number>(this.getNativeScrollbarSize())),\r\n        tap(() => this.nativeScrollbarSize = this._nativeScrollbarSize.asObservable()),\r\n        switchMap(() => fromEvent(this.document.defaultView, 'resize', { passive: true })),\r\n        debounceTime(this.manager.globalOptions.windowResizeDebounce),\r\n        tap(() => this._nativeScrollbarSize.next(this.getNativeScrollbarSize()))\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get native scrollbar size\r\n   */\r\n  private getNativeScrollbarSize(): number {\r\n    if (this.platform.ANDROID || this.platform.IOS) {\r\n      return 6;\r\n    }\r\n    const box = this.document.createElement('div');\r\n    box.className = 'ng-scrollbar-measure';\r\n    this.document.body.appendChild(box);\r\n    const size = box.getBoundingClientRect().right;\r\n    this.document.body.removeChild(box);\r\n    // if size is 0, return 15 (for MAC OS browsers)\r\n    return size || 15;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  ContentChild,\r\n  OnInit,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { fromEvent, Observable, Observer, Subject } from 'rxjs';\r\nimport { filter, map, pairwise, pluck, takeUntil, tap } from 'rxjs/operators';\r\nimport { ScrollViewport } from './scroll-viewport';\r\nimport { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from 'ngx-scrollbar/smooth-scroll';\r\n// Uncomment the following line in development mode\r\n// import { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from '../../smooth-scroll/src/public_api';\r\nimport { ScrollbarAppearance, ScrollbarTrack, ScrollbarPosition, ScrollbarVisibility, NgScrollbarState } from './ng-scrollbar.model';\r\nimport { ScrollbarManager } from './utils/scrollbar-manager';\r\nimport { NativeScrollbarSizeFactory } from './utils/native-scrollbar-size-factory';\r\n\r\n@Component({\r\n  selector: 'ng-scrollbar',\r\n  exportAs: 'ngScrollbar',\r\n  templateUrl: 'ng-scrollbar.html',\r\n  styleUrls: ['ng-scrollbar.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: { '[class.ng-scrollbar]': 'true' }\r\n})\r\nexport class NgScrollbar implements OnInit, AfterViewChecked, OnDestroy {\r\n  /** Default viewport reference */\r\n  @ViewChild('viewport', { static: true }) private defaultViewPort: ElementRef<HTMLElement>;\r\n  /** Custom viewport reference */\r\n  @ContentChild(ScrollViewport, { static: true }) private customViewPort: ScrollViewport;\r\n  /** A class forwarded to scrollable viewport element */\r\n  @Input() viewClass: string = this.manager.globalOptions.viewClass;\r\n  /** A class forwarded to the scrollbar track element */\r\n  @Input() trackClass: string = this.manager.globalOptions.trackClass;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  @Input() thumbClass: string = this.manager.globalOptions.thumbClass;\r\n  /** Minimum scrollbar thumb size */\r\n  @Input() minThumbSize: number = this.manager.globalOptions.minThumbSize;\r\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\r\n  @Input() trackClickScrollDuration = this.manager.globalOptions.trackClickScrollDuration;\r\n  /** A flag used to enable/disable the scrollbar track clicked event */\r\n  @Input() trackClickDisabled: boolean = this.manager.globalOptions.trackClickDisabled;\r\n  /** A flag used to enable/disable the scrollbar thumb dragged event */\r\n  @Input() thumbDragDisabled: boolean = this.manager.globalOptions.thumbDragDisabled;\r\n  /** Disable custom scrollbar and switch back to native scrollbar */\r\n  @Input() disabled: boolean = false;\r\n  /**\r\n   * Sets the supported scroll track of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar\r\n   * - `horizontal` Use both vertical and horizontal scrollbar\r\n   * - `all` Use both vertical and horizontal scrollbar\r\n   */\r\n  @Input() track: ScrollbarTrack = this.manager.globalOptions.track;\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  @Input() visibility: ScrollbarVisibility = this.manager.globalOptions.visibility;\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  @Input() appearance: ScrollbarAppearance = this.manager.globalOptions.appearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar positions\r\n   */\r\n  @Input() position: ScrollbarPosition = this.manager.globalOptions.position;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  @Input() sensorDebounce: number = this.manager.globalOptions.sensorDebounce;\r\n  /** Whether ResizeObserver is disabled */\r\n  @Input() sensorDisabled: boolean = this.manager.globalOptions.sensorDisabled;\r\n  /** Steam that emits when scrollbar is updated */\r\n  @Output() updated = new EventEmitter<void>();\r\n  /** Viewport Element */\r\n  viewport: HTMLElement;\r\n  /** Content Wrapper element */\r\n  contentWrapper: HTMLElement | undefined;\r\n  /** stream that emits on scroll event */\r\n  scrolled: Observable<any>;\r\n  /** Steam that emits scroll event for vertical scrollbar */\r\n  verticalScrolled: Observable<any>;\r\n  /** Steam that emits scroll event for horizontal scrollbar */\r\n  horizontalScrolled: Observable<any>;\r\n  /** Default viewport classes */\r\n  viewportClasses: any;\r\n  /** Set of attributes added on the scrollbar wrapper */\r\n  state: NgScrollbarState = {};\r\n  /** Stream that destroys components' observables */\r\n  private destroyed = new Subject<void>();\r\n\r\n  constructor(private el: ElementRef,\r\n              private zone: NgZone,\r\n              private changeDetectorRef: ChangeDetectorRef,\r\n              private dir: Directionality,\r\n              private smoothScroll: SmoothScrollManager,\r\n              public manager: ScrollbarManager,\r\n              public nativeScrollbarSizeFactory: NativeScrollbarSizeFactory) {\r\n  }\r\n\r\n  private getScrolledByDirection(track: ScrollbarTrack) {\r\n    const scrollProperty: string = track === 'vertical' ? 'scrollTop' : 'scrollLeft';\r\n    let event: any;\r\n    return this.scrolled.pipe(\r\n      tap((e: any) => event = e),\r\n      pluck('target', scrollProperty),\r\n      pairwise(),\r\n      filter(([prev, curr]) => prev !== curr),\r\n      map(() => event)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update local state with each change detection\r\n   */\r\n  private updateState() {\r\n    let verticalUsed: boolean = false;\r\n    let horizontalUsed: boolean = false;\r\n    let isVerticallyScrollable: boolean = false;\r\n    let isHorizontallyScrollable: boolean = false;\r\n\r\n    // Check if vertical scrollbar should be displayed\r\n    if (this.track === 'all' || this.track === 'vertical') {\r\n      isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;\r\n      verticalUsed = this.visibility === 'always' || isVerticallyScrollable;\r\n    }\r\n    // Check if horizontal scrollbar should be displayed\r\n    if (this.track === 'all' || this.track === 'horizontal') {\r\n      isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;\r\n      horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;\r\n    }\r\n\r\n    this._updateState({\r\n      position: this.position,\r\n      track: this.track,\r\n      appearance: this.appearance,\r\n      visibility: this.visibility,\r\n      disabled: this.disabled,\r\n      dir: this.dir.value,\r\n      verticalUsed,\r\n      horizontalUsed,\r\n      isVerticallyScrollable,\r\n      isHorizontallyScrollable\r\n    });\r\n  }\r\n\r\n  private _updateState(state: NgScrollbarState) {\r\n    this.state = { ...this.state, ...state };\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  setHovered(hovered: ScrollbarHovered) {\r\n    this.zone.run(() => this._updateState({ ...hovered }));\r\n  }\r\n\r\n  setDragging(dragging: ScrollbarDragging) {\r\n    this.zone.run(() => this._updateState({ ...dragging }));\r\n  }\r\n\r\n  /**\r\n   * Set the viewport based on user choice\r\n   */\r\n  private setViewport() {\r\n    if (this.customViewPort) {\r\n      // Set the custom viewport as the scroll viewport\r\n      this.viewport = this.customViewPort.viewPort.nativeElement;\r\n      // In this case the default viewport and the default content wrapper will act as a mask\r\n      this.viewportClasses = {\r\n        'ng-scroll-offset': true,\r\n        'ng-scroll-layer': true\r\n      };\r\n      this.defaultViewPort.nativeElement.firstElementChild.className = 'ng-scroll-layer';\r\n    } else {\r\n      // Set the default viewport as the scroll viewport\r\n      this.viewport = this.defaultViewPort.nativeElement;\r\n      this.viewportClasses = {\r\n        'ng-scroll-offset': true,\r\n        'ng-scroll-viewport': true,\r\n        [this.viewClass]: true,\r\n      };\r\n    }\r\n    // Check if the custom viewport has only one child and set it as the content wrapper\r\n    if (this.viewport.firstElementChild) {\r\n      this.contentWrapper = this.viewport.firstElementChild as HTMLElement;\r\n      this.contentWrapper.classList.add('ng-scroll-content');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.setViewport();\r\n\r\n      // Initialize scroll streams\r\n      this.scrolled = new Observable((observer: Observer<any>) =>\r\n        fromEvent(this.viewport, 'scroll', { passive: true }).pipe(takeUntil(this.destroyed))\r\n          .subscribe(observer));\r\n\r\n      this.verticalScrolled = this.getScrolledByDirection('vertical');\r\n      this.horizontalScrolled = this.getScrolledByDirection('horizontal');\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.updateState();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n\r\n  /**\r\n   * Update local state and the internal scrollbar controls\r\n   */\r\n  update() {\r\n    this.updated.next();\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Smooth scroll functions\r\n   */\r\n\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void> {\r\n    return this.smoothScroll.scrollTo(this.viewport, options);\r\n  }\r\n\r\n  /**\r\n   * Scroll to element by reference or selector\r\n   */\r\n  scrollToElement(target: SmoothScrollElement, options?): Promise<void> {\r\n    return this.smoothScroll.scrollToElement(this.viewport, target, options);\r\n  }\r\n}\r\n\r\n\r\ninterface ScrollbarDragging {\r\n  verticalDragging?: boolean;\r\n  horizontalDragging?: boolean;\r\n}\r\n\r\ninterface ScrollbarHovered {\r\n  verticalHovered?: boolean;\r\n  horizontalHovered?: boolean;\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { animationFrameScheduler, asyncScheduler, EMPTY, fromEvent, merge, Observable, of, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, mergeMap, pluck, switchMap, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\nexport abstract class ScrollbarRef {\r\n  // Scrollable view element\r\n  protected readonly viewElement: HTMLElement;\r\n  protected readonly trackElement: HTMLElement;\r\n  protected readonly thumbElement: HTMLElement;\r\n\r\n  protected readonly hoveredState: Subject<boolean>;\r\n  protected readonly draggingState: Subject<boolean>;\r\n\r\n  // Pointer events switcher stream\r\n  protected readonly pointerEvents: Subject<boolean>;\r\n\r\n  protected abstract get scrollSize(): number;\r\n\r\n  protected abstract get viewportSize(): number;\r\n\r\n  protected abstract get trackSize(): number;\r\n\r\n  protected abstract get thumbSize(): number;\r\n\r\n  protected abstract get scrollOffset(): number;\r\n\r\n  protected abstract get dragStartOffset(): number;\r\n\r\n  protected abstract get dragOffset(): number;\r\n\r\n  protected abstract get pageProperty(): string;\r\n\r\n  protected abstract get clientProperty(): string;\r\n\r\n  // The available scrollable size\r\n  protected get scrollMax(): number {\r\n    return this.scrollSize - this.viewportSize;\r\n  }\r\n\r\n  protected get trackMax(): number {\r\n    return this.trackSize - this.thumbSize;\r\n  }\r\n\r\n  protected constructor(protected scrollbarRef: NgScrollbar,\r\n                        protected document: any,\r\n                        trackRef: ElementRef,\r\n                        thumbRef: ElementRef,\r\n                        platform: Platform,\r\n                        protected destroyed: Subject<void>) {\r\n    this.viewElement = scrollbarRef.viewport;\r\n    this.trackElement = trackRef.nativeElement;\r\n    this.thumbElement = thumbRef.nativeElement;\r\n\r\n    if (!(platform.IOS || platform.ANDROID)) {\r\n\r\n      this.pointerEvents = new Subject<boolean>();\r\n      this.hoveredState = new Subject<boolean>();\r\n      this.draggingState = new Subject<boolean>();\r\n\r\n      this.draggingState.pipe(\r\n        distinctUntilChanged(),\r\n        tap((state: boolean) => this.setDragging(state)),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n\r\n      const scrollbarClicked = fromEvent(this.viewElement, 'mousedown', { passive: true }).pipe(\r\n        switchMap((e: any) => {\r\n          e.stopPropagation();\r\n          this.document.onselectstart = () => false;\r\n          const isThumbClick = isWithinBounds(e, this.thumbElement.getBoundingClientRect());\r\n          if (isThumbClick && !coerceBooleanProperty(this.scrollbarRef.thumbDragDisabled)) {\r\n            return this.dragged(e);\r\n          } else {\r\n            const isTrackClick = isWithinBounds(e, this.trackElement.getBoundingClientRect());\r\n            if (isTrackClick && !coerceBooleanProperty(this.scrollbarRef.trackClickDisabled)) {\r\n              return this.trackClicked(e);\r\n            }\r\n          }\r\n          return EMPTY;\r\n        })\r\n      );\r\n\r\n      // Activate/Deactivate scrollbar hover event\r\n      const mouseLeave = fromEvent(this.viewElement, 'mouseleave').pipe(\r\n        map((e: any) => {\r\n          e.stopPropagation();\r\n          return false;\r\n        })\r\n      );\r\n      merge(this.pointerEvents, mouseLeave).pipe(distinctUntilChanged()).pipe(\r\n        tap((state: boolean) => this.setHovered(state)),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n\r\n      // Activate/Deactivate scrollTo on scrollbar click event\r\n      this.pointerEvents.pipe(\r\n        distinctUntilChanged(),\r\n        switchMap((state: boolean) => state ? scrollbarClicked : EMPTY),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n\r\n      this.hovered().pipe(\r\n        tap((state: boolean) => this.pointerEvents.next(state)),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n    }\r\n\r\n    // Start updating thumb position when view scrolls\r\n    this.scrolled().pipe(\r\n      tap(() => this.updateThumb()),\r\n      takeUntil(this.destroyed)\r\n    ).subscribe();\r\n\r\n    // Update scrollbar when `NgScrollbar.update()` is called\r\n    this.scrollbarRef.updated.pipe(\r\n      tap(() => this.updateThumb()),\r\n      takeUntil(this.destroyed)\r\n    ).subscribe();\r\n\r\n    // Initialize scrollbar\r\n    asyncScheduler.schedule(() => this.updateThumb(), 100);\r\n  }\r\n\r\n  /**\r\n   * Updates scrollbar's thumb position and size\r\n   */\r\n  protected updateThumb(): void {\r\n    const trackMax = this.trackMax;\r\n    const size = calculateThumbSize(this.trackSize, this.scrollSize, this.scrollbarRef.minThumbSize);\r\n    const position = calculateThumbPosition(this.scrollOffset, this.scrollMax, trackMax);\r\n    animationFrameScheduler.schedule(() => this.applyThumbStyle(size, position, trackMax));\r\n  }\r\n\r\n  dragged(event: any) {\r\n    let trackMax: number;\r\n    let scrollMax: number;\r\n\r\n    const dragStart = of(event).pipe(\r\n      tap(() => {\r\n        // Capture scrollMax and trackMax once\r\n        trackMax = this.trackMax;\r\n        scrollMax = this.scrollMax;\r\n        this.draggingState.next(true);\r\n      }),\r\n    );\r\n\r\n    const dragging = fromEvent(this.document, 'mousemove', { capture: true, passive: true }).pipe(\r\n      tap((e: any) => e.stopPropagation())\r\n    );\r\n\r\n    const dragEnd = fromEvent(this.document, 'mouseup', { capture: true }).pipe(\r\n      tap((e: any) => {\r\n        e.stopPropagation();\r\n        this.document.onselectstart = null;\r\n        this.draggingState.next(false);\r\n      })\r\n    );\r\n\r\n    return dragStart.pipe(\r\n      pluck(this.pageProperty),\r\n      map((pageOffset: number) => pageOffset - this.dragStartOffset),\r\n      mergeMap((mouseDownOffset: number) => dragging.pipe(\r\n        pluck(this.clientProperty),\r\n        // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\r\n        map((mouseOffset: number) => mouseOffset - this.dragOffset),\r\n        map((offset: number) => scrollMax * (offset - mouseDownOffset) / trackMax),\r\n        map((position: number) => this.handleDragPosition(position, scrollMax)),\r\n        tap((value: number) => this.scrollTo(value)),\r\n        takeUntil(dragEnd)\r\n      ))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stream that emits when a scrollbar is hovered\r\n   */\r\n  private hovered(): Observable<boolean> {\r\n    return fromEvent(this.viewElement, 'mousemove', { passive: true }).pipe(\r\n      map((e: any) => {\r\n        e.stopPropagation();\r\n        return isWithinBounds(e, this.trackElement.getBoundingClientRect());\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stream that emits when scrollbar track is clicked\r\n   */\r\n  protected trackClicked(e): Observable<number> {\r\n    return of(e).pipe(\r\n      pluck(this.pageProperty),\r\n      map((pageOffset: number) => pageOffset - this.dragOffset),\r\n      map((clickOffset: number) => {\r\n        const offset = clickOffset - (this.thumbSize / 2);\r\n        const ratio = offset / this.trackSize;\r\n        return ratio * this.scrollSize;\r\n      }),\r\n      tap((value: number) =>\r\n        this.scrollbarRef.scrollTo({\r\n          ...this.mapToScrollToOption(value),\r\n          duration: coerceNumberProperty(this.scrollbarRef.trackClickScrollDuration)\r\n        })\r\n      ),\r\n      tap(() => this.document.onselectstart = null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stream that emits when view is scrolled\r\n   */\r\n  protected abstract scrolled(): Observable<any>;\r\n\r\n  /**\r\n   * Return a scrollTo option parameter\r\n   */\r\n  protected abstract mapToScrollToOption(value: number): ScrollToOptions;\r\n\r\n  /**\r\n   * Updates scrollbar's thumb size and position\r\n   */\r\n  protected abstract applyThumbStyle(size: number, position: number, trackMax?: number): void;\r\n\r\n  /**\r\n   * On drag function\r\n   */\r\n  protected abstract handleDragPosition(position: number, scrollMax: number): number;\r\n\r\n  protected abstract scrollTo(point: number): void;\r\n\r\n  protected abstract setDragging(value: boolean): void;\r\n\r\n  protected abstract setHovered(value: boolean): void;\r\n}\r\n\r\n/**\r\n * Calculate Scrollbar thumb size\r\n * @param trackSize Scrollbar track size\r\n * @param contentSize Content size or Viewport scroll size\r\n * @param minThumbSize Minimum scrollbar thumb size\r\n */\r\nfunction calculateThumbSize(trackSize: number, contentSize: number, minThumbSize: number): number {\r\n  const scrollbarRatio = trackSize / contentSize;\r\n  const thumbSize = scrollbarRatio * trackSize;\r\n  return Math.max(~~thumbSize, minThumbSize);\r\n}\r\n\r\n/**\r\n * Calculate scrollbar thumb position\r\n * @param scrollPosition The scroll position of the viewport\r\n * @param scrollMax The max size available to scroll the viewport\r\n * @param trackMax The max size available to move scrollbar thumb\r\n */\r\nfunction calculateThumbPosition(scrollPosition: number, scrollMax: number, trackMax: number): number {\r\n  return scrollPosition * trackMax / scrollMax;\r\n}\r\n\r\n/**\r\n * Check if pointer is within scrollbar bounds\r\n * @param e Pointer event\r\n * @param rect Scrollbar Client Rect\r\n */\r\nfunction isWithinBounds(e: any, rect: ClientRect): boolean {\r\n  return (\r\n    e.clientX >= rect.left &&\r\n    e.clientX <= rect.left + rect.width &&\r\n    e.clientY >= rect.top &&\r\n    e.clientY <= rect.top + rect.height\r\n  );\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { getRtlScrollAxisType, Platform, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { ScrollbarRef } from './scrollbar-ref';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\nexport class HorizontalScrollbarRef extends ScrollbarRef {\r\n\r\n  protected get scrollSize(): number {\r\n    return this.viewElement.scrollWidth;\r\n  }\r\n\r\n  protected get viewportSize(): number {\r\n    return this.viewElement.clientWidth;\r\n  }\r\n\r\n  protected get trackSize(): number {\r\n    return this.trackElement.clientWidth;\r\n  }\r\n\r\n  protected get thumbSize(): number {\r\n    return this.thumbElement.clientWidth;\r\n  }\r\n\r\n  protected get scrollOffset(): number {\r\n    return this.viewElement.scrollLeft;\r\n  }\r\n\r\n  protected get dragOffset(): number {\r\n    return this.trackElement.getBoundingClientRect().left;\r\n  }\r\n\r\n  protected get dragStartOffset(): number {\r\n    return this.thumbElement.getBoundingClientRect().left;\r\n  }\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageX';\r\n  }\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientX';\r\n  }\r\n\r\n  constructor(protected scrollbarRef: NgScrollbar,\r\n              protected document: any,\r\n              trackRef: ElementRef,\r\n              thumbRef: ElementRef,\r\n              protected platform: Platform,\r\n              protected destroyed: Subject<void>,\r\n              protected dir: Directionality) {\r\n    super(scrollbarRef, document, trackRef, thumbRef, platform, destroyed);\r\n  }\r\n\r\n  private _handleThumbPosition(position: number, trackMax: number) {\r\n    if (this.dir.value === 'rtl') {\r\n      if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return -position;\r\n      }\r\n      if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\r\n        return position - trackMax;\r\n      }\r\n      // Keeping this as a memo\r\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n      //   return position;\r\n      // }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  protected handleDragPosition(position: number): number {\r\n    if (this.dir.value === 'rtl') {\r\n      if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n        return position - this.scrollMax;\r\n      }\r\n      if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return this.scrollMax - position;\r\n      }\r\n      // Keeping this as a memo\r\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\r\n      //   return position;\r\n      // }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  protected scrolled(): Observable<any> {\r\n    return this.scrollbarRef.horizontalScrolled;\r\n  }\r\n\r\n  protected applyThumbStyle(size: number, position: number, trackMax?: number): void {\r\n    this.thumbElement.style.width = `${ size }px`;\r\n    this.thumbElement.style.transform = `translate3d(${ this._handleThumbPosition(position, trackMax) }px, 0, 0)`;\r\n  }\r\n\r\n  protected mapToScrollToOption(value: number): ScrollToOptions {\r\n    return { left: value };\r\n  }\r\n\r\n  protected scrollTo(point: number): void {\r\n    this.viewElement.scrollLeft = point;\r\n  }\r\n\r\n  protected setHovered(value: boolean): void {\r\n    this.scrollbarRef.setHovered({ horizontalHovered: value });\r\n  }\r\n\r\n  protected setDragging(value: boolean): void {\r\n    this.scrollbarRef.setDragging({ horizontalDragging: value });\r\n  }\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { ScrollbarRef } from './scrollbar-ref';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\nexport class VerticalScrollbarRef extends ScrollbarRef {\r\n\r\n  protected get scrollSize(): number {\r\n    return this.viewElement.scrollHeight;\r\n  }\r\n\r\n  protected get viewportSize(): number {\r\n    return this.viewElement.clientHeight;\r\n  }\r\n\r\n  protected get trackSize(): number {\r\n    return this.trackElement.clientHeight;\r\n  }\r\n\r\n  protected get thumbSize(): number {\r\n    return this.thumbElement.clientHeight;\r\n  }\r\n\r\n  protected get scrollOffset(): number {\r\n    return this.viewElement.scrollTop;\r\n  }\r\n\r\n  protected get dragOffset(): number {\r\n    return this.trackElement.getBoundingClientRect().top;\r\n  }\r\n\r\n  protected get dragStartOffset(): number {\r\n    return this.thumbElement.getBoundingClientRect().top;\r\n  }\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageY';\r\n  }\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientY';\r\n  }\r\n\r\n  constructor(protected scrollbarRef: NgScrollbar,\r\n              protected document: any,\r\n              trackRef: ElementRef,\r\n              thumbRef: ElementRef,\r\n              platform: Platform,\r\n              protected destroyed: Subject<void>) {\r\n    super(scrollbarRef, document, trackRef, thumbRef, platform, destroyed);\r\n  }\r\n\r\n  protected scrolled(): Observable<any> {\r\n    return this.scrollbarRef.verticalScrolled;\r\n  }\r\n\r\n  protected applyThumbStyle(size: number, position: number): void {\r\n    this.thumbElement.style.height = `${ size }px`;\r\n    this.thumbElement.style.transform = `translate3d(0 ,${ position }px, 0)`;\r\n  }\r\n\r\n  protected mapToScrollToOption(value: number): ScrollToOptions {\r\n    return { top: value };\r\n  }\r\n\r\n  protected handleDragPosition(position: number): number {\r\n    return position;\r\n  }\r\n\r\n  protected scrollTo(point: number): void {\r\n    this.viewElement.scrollTop = point;\r\n  }\r\n\r\n  protected setHovered(value: boolean): void {\r\n    this.scrollbarRef.setHovered({ verticalHovered: value });\r\n  }\r\n\r\n  protected setDragging(value: boolean): void {\r\n    this.scrollbarRef.setDragging({ verticalDragging: value });\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, OnDestroy, ViewChild, Input, Inject, NgZone, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { Subject } from 'rxjs';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\nimport { ScrollbarRef } from '../classes/scrollbar-ref';\r\nimport { HorizontalScrollbarRef } from '../classes/horizontal-scrollbar-ref';\r\nimport { VerticalScrollbarRef } from '../classes/vertical-scrollbar-ref';\r\n\r\n@Component({\r\n  selector: 'scrollbar-control',\r\n  host: {\r\n    '[class.scrollbar-control]': 'true'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./shared.scss', './horizontal.scss', './vertical.scss'],\r\n  template: `\r\n    <div #track class=\"ng-scrollbar-track {{parent.trackClass}}\">\r\n      <div #thumb class=\"ng-scrollbar-thumb {{parent.thumbClass}}\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class ScrollbarControl implements OnInit, OnDestroy {\r\n\r\n  // Custom scrollbar reference\r\n  private scrollbarRef: ScrollbarRef;\r\n\r\n  // The axis of the scrollbar\r\n  @Input() private track: 'horizontal' | 'vertical';\r\n\r\n  // Scrollbar container element reference\r\n  @ViewChild('track', { static: true }) trackRef: ElementRef;\r\n\r\n  // Scrollbar thumb element reference\r\n  @ViewChild('thumb', { static: true }) thumbRef: ElementRef;\r\n\r\n  // Stream that emits to unsubscribe from all streams\r\n  protected readonly destroyed = new Subject<void>();\r\n\r\n  constructor(public parent: NgScrollbar,\r\n              private platform: Platform,\r\n              private dir: Directionality,\r\n              private zone: NgZone,\r\n              @Inject(DOCUMENT) private document: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      // Avoid SSR Error\r\n      if (this.platform.isBrowser) {\r\n        this.scrollbarRef = this.track === 'vertical'\r\n          ? new VerticalScrollbarRef(this.parent, this.document, this.trackRef, this.thumbRef, this.platform, this.destroyed)\r\n          : new HorizontalScrollbarRef(this.parent, this.document, this.trackRef, this.thumbRef, this.platform, this.destroyed, this.dir);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'cssVariable'\r\n})\r\nexport class CssVariable implements PipeTransform {\r\n\r\n  transform(size: number, variableName): SafeHtml {\r\n    return this.sanitizer.bypassSecurityTrustStyle(`--${variableName}: -${size}px`);\r\n  }\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input } from '@angular/core';\r\nimport { NgScrollbarState } from '../ng-scrollbar.model';\r\n\r\n@Directive({ selector: '[ngAttr]' })\r\nexport class NgAttr {\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  @Input() set ngAttr(attrs: NgScrollbarState) {\r\n    for (const [key, value] of Object.entries(attrs)) {\r\n      (this.el.nativeElement as HTMLElement).setAttribute(key, value);\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, Injectable, Inject, AfterContentInit, OnDestroy, NgZone } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { from, of, EMPTY, BehaviorSubject, Observable, Subscription, Observer } from 'rxjs';\r\nimport { catchError, debounceTime, map, switchMap } from 'rxjs/operators';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\n/**\r\n * Factory that initialize the ResizeObserver if available in the browser\r\n * Otherwise, it lazy-loads the ResizeObserver polyfill\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class ResizeObserverFactory {\r\n  private readonly resizeObserverSource = new BehaviorSubject(null);\r\n  readonly resizeObserverLoader = this.resizeObserverSource.asObservable();\r\n\r\n  constructor(@Inject(DOCUMENT) document: any, platform: Platform) {\r\n    if (platform.isBrowser) {\r\n      const resizeObserverApi = document.defaultView.ResizeObserver\r\n        ? of(document.defaultView.ResizeObserver)\r\n        : from(import('@juggle/resize-observer')).pipe(\r\n          map((module: { ResizeObserver: any }) => module.ResizeObserver),\r\n          catchError((e) => {\r\n            console.log('Unable to load ResizeObserver polyfill', e);\r\n            return EMPTY;\r\n          }));\r\n      this.resizeObserverSource.next(resizeObserverApi);\r\n    }\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[resizeSensor]' })\r\nexport class ResizeSensor implements AfterContentInit, OnDestroy {\r\n\r\n  /** Debounce interval for emitting the changes. */\r\n  @Input('sensorDebounce')\r\n  get debounce(): number {\r\n    return this._debounce;\r\n  }\r\n\r\n  set debounce(value: number) {\r\n    this._debounce = coerceNumberProperty(value);\r\n    this._subscribe();\r\n  }\r\n\r\n  private _debounce: number;\r\n\r\n  /** Whether ResizeObserver is disabled. */\r\n  @Input('sensorDisabled')\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: any) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this._unsubscribe() : this._subscribe();\r\n  }\r\n\r\n  private _disabled: boolean = false;\r\n\r\n  private _subscription: Subscription | null = null;\r\n  private _resizeObserver: any;\r\n\r\n  constructor(private zone: NgZone,\r\n              private platform: Platform,\r\n              private resizeObserverFactory: ResizeObserverFactory,\r\n              private scrollbar: NgScrollbar) {\r\n    if (!scrollbar) {\r\n      throw new Error('[NgScrollbar Resize Sensor Directive]: Host element must be an NgScrollbar component.');\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (!this._subscription && !this._disabled) {\r\n      this._subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe();\r\n  }\r\n\r\n  private _createObserver(ResizeObserver: any): Observable<void> {\r\n    return new Observable((observer: Observer<void>) => {\r\n      this._resizeObserver = new ResizeObserver(() => observer.next());\r\n      this._resizeObserver.observe(this.scrollbar.viewport);\r\n      if (this.scrollbar.contentWrapper) {\r\n        this._resizeObserver.observe(this.scrollbar.contentWrapper);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _subscribe() {\r\n    this._unsubscribe();\r\n    if (this.platform.isBrowser) {\r\n      this.zone.runOutsideAngular(() => {\r\n        this._subscription = this.resizeObserverFactory.resizeObserverLoader.pipe(\r\n          switchMap((moduleObservable: Observable<any>) => moduleObservable),\r\n          switchMap((ResizeObserver: any) => {\r\n            if (ResizeObserver) {\r\n              const stream = this._createObserver(ResizeObserver);\r\n              return this.debounce ? stream.pipe(debounceTime(this._debounce)) : stream;\r\n            } else {\r\n              return EMPTY;\r\n            }\r\n          })\r\n        ).subscribe(() => this.scrollbar.update());\r\n      });\r\n    }\r\n  }\r\n\r\n  private _unsubscribe() {\r\n    if (this._resizeObserver) {\r\n      this._resizeObserver.disconnect();\r\n    }\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';\r\n// Uncomment the following line in development mode\r\n// import { SmoothScrollModule } from '../../smooth-scroll/src/public_api';\r\n\r\nimport { NgScrollbar } from './ng-scrollbar';\r\nimport { ScrollbarControl } from './scrollbar-control/scrollbar-control';\r\nimport { ScrollViewport } from './scroll-viewport';\r\nimport { CssVariable } from './utils/css-variable.pipe';\r\nimport { NgAttr } from './utils/ng-attr.directive';\r\nimport { ResizeSensor } from './utils/resize-sensor.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BidiModule,\r\n    PortalModule,\r\n    PlatformModule,\r\n    SmoothScrollModule\r\n  ],\r\n  declarations: [\r\n    NgScrollbar,\r\n    ScrollbarControl,\r\n    ScrollViewport,\r\n    CssVariable,\r\n    NgAttr,\r\n    ResizeSensor\r\n  ],\r\n  exports: [\r\n    NgScrollbar,\r\n    ScrollViewport\r\n  ]\r\n})\r\nexport class NgScrollbarModule {\r\n}\r\n"],"names":["tslib_1.__extends","tslib_1.__values"],"mappings":"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"}