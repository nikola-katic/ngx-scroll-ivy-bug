{"version":3,"file":"ngx-scrollbar-smooth-scroll.js","sources":["ng://ngx-scrollbar/smooth-scroll/smooth-scroll.model.ts","ng://ngx-scrollbar/smooth-scroll/smooth-scroll-manager.ts","ng://ngx-scrollbar/smooth-scroll/smooth-scroll.ts","ng://ngx-scrollbar/smooth-scroll/smooth-scroll.module.ts"],"sourcesContent":["import { ElementRef, InjectionToken } from '@angular/core';\r\nimport { _XAxis, _YAxis } from '@angular/cdk/scrolling';\r\n\r\nexport const SMOOTH_SCROLL_OPTIONS = new InjectionToken<SmoothScrollOptions>('SMOOTH_SCROLL_OPTIONS');\r\n\r\nexport type SmoothScrollElement = HTMLElement | ElementRef<HTMLElement> | string;\r\n\r\nexport type SmoothScrollToOptions = _XAxis & _YAxis & SmoothScrollOptions;\r\n\r\nexport interface SmoothScrollOptions {\r\n  duration?: number;\r\n  easing?: BezierEasingOptions;\r\n}\r\n\r\nexport interface SmoothScrollStep {\r\n  scrollable: HTMLElement;\r\n  startTime: number;\r\n  startX: number;\r\n  startY: number;\r\n  x: number;\r\n  y: number;\r\n  duration: number;\r\n  easing: (k: number) => number;\r\n  currentX?: number;\r\n  currentY?: number;\r\n}\r\n\r\nexport interface BezierEasingOptions {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n","import { ElementRef, Inject, Injectable, PLATFORM_ID, Optional, NgZone } from '@angular/core';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\nimport { coerceElement } from '@angular/cdk/coercion';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { _Bottom, _Left, _Right, _Top, _Without } from '@angular/cdk/scrolling';\r\nimport { fromEvent, merge, of, Observable, Subject, animationFrameScheduler } from 'rxjs';\r\nimport { expand, finalize, take, takeUntil, takeWhile } from 'rxjs/operators';\r\nimport BezierEasing from 'bezier-easing';\r\nimport {\r\n  SMOOTH_SCROLL_OPTIONS,\r\n  SmoothScrollElement,\r\n  SmoothScrollOptions,\r\n  SmoothScrollStep,\r\n  SmoothScrollToOptions\r\n} from './smooth-scroll.model';\r\n\r\n// @dynamic\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmoothScrollManager {\r\n\r\n  // Default options\r\n  private _defaultOptions: SmoothScrollToOptions;\r\n\r\n  // Keeps track of the ongoing SmoothScroll functions so they can be handled in case of duplication.\r\n  // Each scrolled element gets a destroyer stream which gets deleted immediately after it completes.\r\n  // Purpose: If user called a scroll function again on the same element before the scrolls completes,\r\n  // it cancels the ongoing scroll and starts a new one\r\n  private _onGoingScrolls = new Map<HTMLElement, Subject<void>>();\r\n\r\n  private get _w(): any {\r\n    return this._document.defaultView;\r\n  }\r\n\r\n  /**\r\n   * Timing method\r\n   */\r\n  private get _now() {\r\n    return this._w.performance && this._w.performance.now\r\n      ? this._w.performance.now.bind(this._w.performance)\r\n      : Date.now;\r\n  }\r\n\r\n  constructor(private _zone: NgZone,\r\n              private _dir: Directionality,\r\n              @Inject(DOCUMENT) private _document: any,\r\n              @Inject(PLATFORM_ID) private _platform: object,\r\n              @Optional() @Inject(SMOOTH_SCROLL_OPTIONS) customDefaultOptions: SmoothScrollToOptions) {\r\n    this._defaultOptions = {\r\n      duration: 468,\r\n      easing: {\r\n        x1: 0.42,\r\n        y1: 0,\r\n        x2: 0.58,\r\n        y2: 1\r\n      },\r\n      ...customDefaultOptions,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * changes scroll position inside an element\r\n   */\r\n  private _scrollElement(el: HTMLElement, x: number, y: number): void {\r\n    el.scrollLeft = x;\r\n    el.scrollTop = y;\r\n  }\r\n\r\n  /**\r\n   * Handles a given parameter of type HTMLElement, ElementRef or selector\r\n   */\r\n  private _getElement(el: HTMLElement | ElementRef | string, parent?: HTMLElement): HTMLElement {\r\n    if (typeof el === 'string') {\r\n      return (parent || this._document).querySelector(el);\r\n    }\r\n    return coerceElement<HTMLElement>(el);\r\n  }\r\n\r\n  /**\r\n   * Initializes a destroyer stream, re-initializes it if the element is already being scrolled\r\n   */\r\n  private _initSmoothScroll(el: HTMLElement): Subject<void> {\r\n    if (this._onGoingScrolls.has(el)) {\r\n      this._onGoingScrolls.get(el).next();\r\n    }\r\n    return this._onGoingScrolls.set(el, new Subject<void>()).get(el);\r\n  }\r\n\r\n  /**\r\n   * Checks if smooth scroll has reached, cleans up the smooth scroll stream and resolves its promise\r\n   */\r\n  private _isFinished(context: SmoothScrollStep, destroyed: Subject<void>, resolve: () => void): boolean {\r\n    if (context.currentX !== context.x || context.currentY !== context.y) {\r\n      return true;\r\n    }\r\n    destroyed.next();\r\n    resolve();\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Terminates an ongoing smooth scroll\r\n   */\r\n  private _interrupted(el: HTMLElement, destroyed: Subject<void>): Observable<any> {\r\n    return merge(\r\n      fromEvent(el, 'wheel', { passive: true, capture: true }),\r\n      fromEvent(el, 'touchmove', { passive: true, capture: true }),\r\n      destroyed\r\n    ).pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * Deletes the destroyer function, runs if the smooth scroll has finished or interrupted\r\n   */\r\n  private _destroy(el: HTMLElement, destroyed: Subject<void>): void {\r\n    destroyed.complete();\r\n    this._onGoingScrolls.delete(el);\r\n  }\r\n\r\n  /**\r\n   * A function called recursively that, given a context, steps through scrolling\r\n   */\r\n  private _step(context: SmoothScrollStep): Observable<SmoothScrollStep> {\r\n    return new Observable(observer => {\r\n      let elapsed = (this._now() - context.startTime) / context.duration;\r\n\r\n      // avoid elapsed times higher than one\r\n      elapsed = elapsed > 1 ? 1 : elapsed;\r\n\r\n      // apply easing to elapsed time\r\n      const value = context.easing(elapsed);\r\n\r\n      context.currentX = context.startX + (context.x - context.startX) * value;\r\n      context.currentY = context.startY + (context.y - context.startY) * value;\r\n\r\n      this._scrollElement(context.scrollable, context.currentX, context.currentY);\r\n      // Proceed to the step\r\n      animationFrameScheduler.schedule(() => observer.next(context));\r\n    });\r\n  }\r\n\r\n  private _applyScrollToOptions(el: HTMLElement, options: SmoothScrollToOptions): Promise<void> {\r\n    if (!options.duration) {\r\n      this._scrollElement(el, options.left, options.top);\r\n      return Promise.resolve();\r\n    }\r\n\r\n    // Initialize a destroyer stream, reinitialize it if the element is already being scrolled\r\n    const destroyed: Subject<void> = this._initSmoothScroll(el);\r\n\r\n    const easingOptions = options.easing || this._defaultOptions.easing;\r\n\r\n    const context: SmoothScrollStep = {\r\n      scrollable: el,\r\n      startTime: this._now(),\r\n      startX: el.scrollLeft,\r\n      startY: el.scrollTop,\r\n      x: options.left == null ? el.scrollLeft : ~~options.left,\r\n      y: options.top == null ? el.scrollTop : ~~options.top,\r\n      duration: options.duration || this._defaultOptions.duration,\r\n      easing: BezierEasing(easingOptions.x1, easingOptions.y1, easingOptions.x2, easingOptions.y2)\r\n    };\r\n\r\n    return new Promise(resolve => {\r\n      // Scroll each step recursively\r\n      of(null).pipe(\r\n        expand(() => this._step(context).pipe(\r\n          takeWhile((currContext: SmoothScrollStep) => this._isFinished(currContext, destroyed, resolve))\r\n        )),\r\n        takeUntil(this._interrupted(el, destroyed)),\r\n        finalize(() => this._destroy(el, destroyed))\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\r\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\r\n   * left and right always refer to the left and right side of the scrolling container irrespective\r\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\r\n   * in an RTL context.\r\n   * @param scrollable element\r\n   * @param options specified the offsets to scroll to.\r\n   */\r\n  scrollTo(scrollable: SmoothScrollElement, options: SmoothScrollToOptions): Promise<void> {\r\n    if (isPlatformBrowser(this._platform)) {\r\n      const el = this._getElement(scrollable);\r\n      const isRtl = getComputedStyle(el).direction === 'rtl';\r\n      const rtlScrollAxisType = getRtlScrollAxisType();\r\n\r\n      // Rewrite start & end offsets as right or left offsets.\r\n      options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\r\n      options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\r\n\r\n      // Rewrite the bottom offset as a top offset.\r\n      if (options.bottom != null) {\r\n        (options as _Without<_Bottom> & _Top).top = el.scrollHeight - el.clientHeight - options.bottom;\r\n      }\r\n\r\n      // Rewrite the right offset as a left offset.\r\n      if (isRtl && rtlScrollAxisType !== RtlScrollAxisType.NORMAL) {\r\n        if (options.left != null) {\r\n          (options as _Without<_Left> & _Right).right = el.scrollWidth - el.clientWidth - options.left;\r\n        }\r\n\r\n        if (rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n          options.left = options.right;\r\n        } else if (rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n          options.left = options.right ? -options.right : options.right;\r\n        }\r\n      } else {\r\n        if (options.right != null) {\r\n          (options as _Without<_Right> & _Left).left = el.scrollWidth - el.clientWidth - options.right;\r\n        }\r\n      }\r\n      return this._applyScrollToOptions(el, options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll to element by reference or selector\r\n   */\r\n  scrollToElement(scrollable: SmoothScrollElement, target: SmoothScrollElement, options: SmoothScrollOptions & _Top & _Left): Promise<void> {\r\n    const scrollableEl = this._getElement(scrollable);\r\n    const targetEl = this._getElement(target, scrollableEl);\r\n    const duration = options.duration;\r\n    const easing = options.easing;\r\n    return targetEl ? this.scrollTo(scrollableEl, {\r\n      left: targetEl.offsetLeft + (options.left || 0),\r\n      top: targetEl.offsetTop + (options.top || 0),\r\n      duration,\r\n      easing\r\n    }) : new Promise(null);\r\n  }\r\n}\r\n\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { SmoothScrollManager } from './smooth-scroll-manager';\r\nimport { SmoothScrollElement, SmoothScrollOptions, SmoothScrollToOptions } from './smooth-scroll.model';\r\n\r\n@Directive({\r\n  selector: '[smoothScroll], [smooth-scroll]',\r\n  exportAs: 'smoothScroll'\r\n})\r\nexport class SmoothScroll {\r\n\r\n  constructor(private element: ElementRef, private smoothScroll: SmoothScrollManager) {\r\n  }\r\n\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void> {\r\n    return this.smoothScroll.scrollTo(this.element, options);\r\n  }\r\n\r\n  scrollToElement(target: SmoothScrollElement, options: SmoothScrollOptions): Promise<void> {\r\n    return this.smoothScroll.scrollToElement(this.element, target, options);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SmoothScroll } from './smooth-scroll';\r\n\r\n@NgModule({\r\n  declarations: [SmoothScroll],\r\n  exports: [SmoothScroll]\r\n})\r\nexport class SmoothScrollModule {\r\n}\r\n"],"names":[],"mappings":"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"}