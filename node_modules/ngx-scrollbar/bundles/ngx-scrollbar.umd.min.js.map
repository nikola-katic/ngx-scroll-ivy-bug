{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-scrollbar/lib/scroll-viewport.ts","ng://ngx-scrollbar/lib/ng-scrollbar.model.ts","ng://ngx-scrollbar/lib/utils/scrollbar-manager.ts","ng://ngx-scrollbar/lib/utils/native-scrollbar-size-factory.ts","ng://ngx-scrollbar/lib/ng-scrollbar.ts","ng://ngx-scrollbar/lib/classes/scrollbar-ref.ts","ng://ngx-scrollbar/lib/classes/horizontal-scrollbar-ref.ts","ng://ngx-scrollbar/lib/classes/vertical-scrollbar-ref.ts","ng://ngx-scrollbar/lib/scrollbar-control/scrollbar-control.ts","ng://ngx-scrollbar/lib/utils/css-variable.pipe.ts","ng://ngx-scrollbar/lib/utils/ng-attr.directive.ts","ng://ngx-scrollbar/lib/utils/resize-sensor.directive.ts","ng://ngx-scrollbar/lib/ng-scrollbar.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","ScrollViewport","viewPort","Directive","args","selector","host","[class.ng-scroll-viewport]","ElementRef","NG_SCROLLBAR_OPTIONS","InjectionToken","defaultOptions","viewClass","trackClass","thumbClass","track","appearance","visibility","position","thumbDragDisabled","trackClickDisabled","trackClickScrollDuration","minThumbSize","windowResizeDebounce","sensorDebounce","sensorDisabled","ScrollbarManager","options","globalOptions","rtlScrollAxisType","getRtlScrollAxisType","Injectable","providedIn","Optional","type","Inject","NativeScrollbarSizeFactory","document","manager","platform","_this","isBrowser","of","pipe","tap","_nativeScrollbarSize","BehaviorSubject","getNativeScrollbarSize","nativeScrollbarSize","asObservable","switchMap","fromEvent","defaultView","passive","debounceTime","subscribe","ANDROID","IOS","box","createElement","className","body","appendChild","size","getBoundingClientRect","right","removeChild","DOCUMENT","Platform","NgScrollbar","el","zone","changeDetectorRef","dir","smoothScroll","nativeScrollbarSizeFactory","disabled","updated","EventEmitter","state","destroyed","Subject","getScrolledByDirection","event","scrollProperty","scrolled","pluck","pairwise","filter","_a","_b","map","updateState","verticalUsed","horizontalUsed","isVerticallyScrollable","isHorizontallyScrollable","viewport","scrollHeight","clientHeight","scrollWidth","clientWidth","_updateState","detectChanges","setHovered","hovered","run","setDragging","dragging","setViewport","customViewPort","nativeElement","viewportClasses","ng-scroll-offset","ng-scroll-layer","defaultViewPort","firstElementChild","ng-scroll-viewport","contentWrapper","classList","add","ngOnInit","runOutsideAngular","Observable","observer","takeUntil","verticalScrolled","horizontalScrolled","ngAfterViewChecked","ngOnDestroy","complete","update","scrollTo","scrollToElement","target","Component","exportAs","template","changeDetection","ChangeDetectionStrategy","OnPush","[class.ng-scrollbar]","NgZone","ChangeDetectorRef","Directionality","SmoothScrollManager","ViewChild","static","ContentChild","Input","Output","ScrollbarRef","scrollbarRef","trackRef","thumbRef","viewElement","trackElement","thumbElement","pointerEvents","hoveredState","draggingState","distinctUntilChanged","scrollbarClicked_1","stopPropagation","onselectstart","isWithinBounds","coerceBooleanProperty","dragged","trackClicked","EMPTY","mouseLeave","merge","updateThumb","asyncScheduler","schedule","defineProperty","scrollSize","viewportSize","trackSize","thumbSize","contentSize","trackMax","Math","max","scrollPosition","scrollMax","calculateThumbPosition","scrollOffset","animationFrameScheduler","applyThumbStyle","dragStart","capture","dragEnd","pageProperty","pageOffset","dragStartOffset","mergeMap","mouseDownOffset","clientProperty","mouseOffset","dragOffset","offset","handleDragPosition","clickOffset","mapToScrollToOption","duration","coerceNumberProperty","rect","clientX","left","width","clientY","top","height","HorizontalScrollbarRef","_super","tslib_1.__extends","scrollLeft","_handleThumbPosition","RtlScrollAxisType","INVERTED","NORMAL","NEGATED","style","transform","point","horizontalHovered","horizontalDragging","VerticalScrollbarRef","scrollTop","verticalHovered","verticalDragging","ScrollbarControl","parent","[class.scrollbar-control]","CssVariable","sanitizer","variableName","bypassSecurityTrustStyle","Pipe","name","DomSanitizer","NgAttr","attrs","tslib_1.__values","entries","_c","_d","key","setAttribute","ResizeObserverFactory","resizeObserverSource","resizeObserverLoader","resizeObserverApi","ResizeObserver","from","import","module","catchError","console","log","ResizeSensor","resizeObserverFactory","scrollbar","_disabled","_subscription","Error","_debounce","_subscribe","_unsubscribe","ngAfterContentInit","_createObserver","_resizeObserver","observe","moduleObservable","stream","debounce","disconnect","unsubscribe","NgScrollbarModule","NgModule","imports","CommonModule","BidiModule","PortalModule","PlatformModule","SmoothScrollModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[scrollViewport], [scroll-viewport]',\r\n  host: {\r\n    '[class.ng-scroll-viewport]': 'true'\r\n  }\r\n})\r\nexport class ScrollViewport {\r\n  constructor(public viewPort: ElementRef) {\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport type ScrollbarAppearance = 'standard' | 'compact' | undefined;\r\nexport type ScrollbarTrack = 'vertical' | 'horizontal' | 'all' | undefined;\r\nexport type ScrollbarVisibility = 'hover' | 'always' | 'native' | undefined;\r\nexport type ScrollbarPosition = 'native' | 'invertY' | 'invertX' | 'invertAll' | undefined;\r\n\r\nexport const NG_SCROLLBAR_OPTIONS = new InjectionToken<NgScrollbarOptions>('NG_SCROLLBAR_OPTIONS');\r\n\r\nexport interface NgScrollbarOptions {\r\n  /**\r\n   * Sets the scroll axis of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar-control\r\n   * - `horizontal` Use both vertical and horizontal scrollbar-control\r\n   * - `all` Use both vertical and horizontal scrollbar-control\r\n   */\r\n  track?: ScrollbarTrack;\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar-control\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  visibility?: ScrollbarVisibility;\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar-control.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  appearance?: ScrollbarAppearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar-control.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar-control positions\r\n   */\r\n  position?: ScrollbarPosition;\r\n  /** A class forwarded to scrollable viewport element */\r\n  viewClass?: string;\r\n  /** A class forwarded to the scrollbar track element */\r\n  trackClass?: string;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  thumbClass?: string;\r\n  /** The minimum scrollbar thumb size in px */\r\n  minThumbSize?: number;\r\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\r\n  trackClickScrollDuration?: number;\r\n  /** A flag used to enable/disable the scrollbar track clicked event */\r\n  trackClickDisabled?: boolean;\r\n  /** A flag used to enable/disable the scrollbar thumb dragged event */\r\n  thumbDragDisabled?: boolean;\r\n  /** Debounce interval for detecting changes via window.resize event */\r\n  windowResizeDebounce?: number;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  sensorDebounce?: number;\r\n  /** Whether ResizeObserver is disabled */\r\n  sensorDisabled?: boolean;\r\n}\r\n\r\n/**\r\n * Set of attributes added on the scrollbar wrapper\r\n */\r\nexport interface NgScrollbarState {\r\n  position?: ScrollbarPosition;\r\n  track?: ScrollbarTrack;\r\n  appearance?: ScrollbarAppearance;\r\n  visibility?: ScrollbarVisibility;\r\n  disabled?: boolean;\r\n  dir?: 'rtl' | 'ltr';\r\n  verticalUsed?: boolean;\r\n  horizontalUsed?: boolean;\r\n  isVerticallyScrollable?: boolean;\r\n  isHorizontallyScrollable?: boolean;\r\n  verticalHovered?: boolean;\r\n  horizontalHovered?: boolean;\r\n  verticalDragging?: boolean;\r\n  horizontalDragging?: boolean;\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { NG_SCROLLBAR_OPTIONS, NgScrollbarOptions } from '../ng-scrollbar.model';\r\n\r\nconst defaultOptions: NgScrollbarOptions = {\r\n  viewClass: '',\r\n  trackClass: '',\r\n  thumbClass: '',\r\n  track: 'vertical',\r\n  appearance: 'compact',\r\n  visibility: 'native',\r\n  position: 'native',\r\n  thumbDragDisabled: false,\r\n  trackClickDisabled: false,\r\n  trackClickScrollDuration: 300,\r\n  minThumbSize: 20,\r\n  windowResizeDebounce: 0,\r\n  sensorDebounce: 0,\r\n  sensorDisabled: false\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ScrollbarManager {\r\n  readonly globalOptions: NgScrollbarOptions;\r\n\r\n  readonly rtlScrollAxisType: RtlScrollAxisType;\r\n\r\n  constructor(@Optional() @Inject(NG_SCROLLBAR_OPTIONS) options: NgScrollbarOptions) {\r\n    this.globalOptions = options ? { ...defaultOptions, ...options } : defaultOptions;\r\n\r\n    this.rtlScrollAxisType = getRtlScrollAxisType();\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { BehaviorSubject, fromEvent, Observable, of } from 'rxjs';\r\nimport { debounceTime, tap, switchMap } from 'rxjs/operators';\r\nimport { ScrollbarManager } from './scrollbar-manager';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NativeScrollbarSizeFactory {\r\n  private _nativeScrollbarSize: BehaviorSubject<number>;\r\n  nativeScrollbarSize: Observable<number>;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: any,\r\n              private manager: ScrollbarManager,\r\n              private platform: Platform) {\r\n    if (platform.isBrowser) {\r\n      of(null).pipe(\r\n        tap(() => this._nativeScrollbarSize = new BehaviorSubject<number>(this.getNativeScrollbarSize())),\r\n        tap(() => this.nativeScrollbarSize = this._nativeScrollbarSize.asObservable()),\r\n        switchMap(() => fromEvent(this.document.defaultView, 'resize', { passive: true })),\r\n        debounceTime(this.manager.globalOptions.windowResizeDebounce),\r\n        tap(() => this._nativeScrollbarSize.next(this.getNativeScrollbarSize()))\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get native scrollbar size\r\n   */\r\n  private getNativeScrollbarSize(): number {\r\n    if (this.platform.ANDROID || this.platform.IOS) {\r\n      return 6;\r\n    }\r\n    const box = this.document.createElement('div');\r\n    box.className = 'ng-scrollbar-measure';\r\n    this.document.body.appendChild(box);\r\n    const size = box.getBoundingClientRect().right;\r\n    this.document.body.removeChild(box);\r\n    // if size is 0, return 15 (for MAC OS browsers)\r\n    return size || 15;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  ContentChild,\r\n  OnInit,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { fromEvent, Observable, Observer, Subject } from 'rxjs';\r\nimport { filter, map, pairwise, pluck, takeUntil, tap } from 'rxjs/operators';\r\nimport { ScrollViewport } from './scroll-viewport';\r\nimport { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from 'ngx-scrollbar/smooth-scroll';\r\n// Uncomment the following line in development mode\r\n// import { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from '../../smooth-scroll/src/public_api';\r\nimport { ScrollbarAppearance, ScrollbarTrack, ScrollbarPosition, ScrollbarVisibility, NgScrollbarState } from './ng-scrollbar.model';\r\nimport { ScrollbarManager } from './utils/scrollbar-manager';\r\nimport { NativeScrollbarSizeFactory } from './utils/native-scrollbar-size-factory';\r\n\r\n@Component({\r\n  selector: 'ng-scrollbar',\r\n  exportAs: 'ngScrollbar',\r\n  templateUrl: 'ng-scrollbar.html',\r\n  styleUrls: ['ng-scrollbar.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: { '[class.ng-scrollbar]': 'true' }\r\n})\r\nexport class NgScrollbar implements OnInit, AfterViewChecked, OnDestroy {\r\n  /** Default viewport reference */\r\n  @ViewChild('viewport', { static: true }) private defaultViewPort: ElementRef<HTMLElement>;\r\n  /** Custom viewport reference */\r\n  @ContentChild(ScrollViewport, { static: true }) private customViewPort: ScrollViewport;\r\n  /** A class forwarded to scrollable viewport element */\r\n  @Input() viewClass: string = this.manager.globalOptions.viewClass;\r\n  /** A class forwarded to the scrollbar track element */\r\n  @Input() trackClass: string = this.manager.globalOptions.trackClass;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  @Input() thumbClass: string = this.manager.globalOptions.thumbClass;\r\n  /** Minimum scrollbar thumb size */\r\n  @Input() minThumbSize: number = this.manager.globalOptions.minThumbSize;\r\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\r\n  @Input() trackClickScrollDuration = this.manager.globalOptions.trackClickScrollDuration;\r\n  /** A flag used to enable/disable the scrollbar track clicked event */\r\n  @Input() trackClickDisabled: boolean = this.manager.globalOptions.trackClickDisabled;\r\n  /** A flag used to enable/disable the scrollbar thumb dragged event */\r\n  @Input() thumbDragDisabled: boolean = this.manager.globalOptions.thumbDragDisabled;\r\n  /** Disable custom scrollbar and switch back to native scrollbar */\r\n  @Input() disabled: boolean = false;\r\n  /**\r\n   * Sets the supported scroll track of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar\r\n   * - `horizontal` Use both vertical and horizontal scrollbar\r\n   * - `all` Use both vertical and horizontal scrollbar\r\n   */\r\n  @Input() track: ScrollbarTrack = this.manager.globalOptions.track;\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  @Input() visibility: ScrollbarVisibility = this.manager.globalOptions.visibility;\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  @Input() appearance: ScrollbarAppearance = this.manager.globalOptions.appearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar positions\r\n   */\r\n  @Input() position: ScrollbarPosition = this.manager.globalOptions.position;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  @Input() sensorDebounce: number = this.manager.globalOptions.sensorDebounce;\r\n  /** Whether ResizeObserver is disabled */\r\n  @Input() sensorDisabled: boolean = this.manager.globalOptions.sensorDisabled;\r\n  /** Steam that emits when scrollbar is updated */\r\n  @Output() updated = new EventEmitter<void>();\r\n  /** Viewport Element */\r\n  viewport: HTMLElement;\r\n  /** Content Wrapper element */\r\n  contentWrapper: HTMLElement | undefined;\r\n  /** stream that emits on scroll event */\r\n  scrolled: Observable<any>;\r\n  /** Steam that emits scroll event for vertical scrollbar */\r\n  verticalScrolled: Observable<any>;\r\n  /** Steam that emits scroll event for horizontal scrollbar */\r\n  horizontalScrolled: Observable<any>;\r\n  /** Default viewport classes */\r\n  viewportClasses: any;\r\n  /** Set of attributes added on the scrollbar wrapper */\r\n  state: NgScrollbarState = {};\r\n  /** Stream that destroys components' observables */\r\n  private destroyed = new Subject<void>();\r\n\r\n  constructor(private el: ElementRef,\r\n              private zone: NgZone,\r\n              private changeDetectorRef: ChangeDetectorRef,\r\n              private dir: Directionality,\r\n              private smoothScroll: SmoothScrollManager,\r\n              public manager: ScrollbarManager,\r\n              public nativeScrollbarSizeFactory: NativeScrollbarSizeFactory) {\r\n  }\r\n\r\n  private getScrolledByDirection(track: ScrollbarTrack) {\r\n    const scrollProperty: string = track === 'vertical' ? 'scrollTop' : 'scrollLeft';\r\n    let event: any;\r\n    return this.scrolled.pipe(\r\n      tap((e: any) => event = e),\r\n      pluck('target', scrollProperty),\r\n      pairwise(),\r\n      filter(([prev, curr]) => prev !== curr),\r\n      map(() => event)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update local state with each change detection\r\n   */\r\n  private updateState() {\r\n    let verticalUsed: boolean = false;\r\n    let horizontalUsed: boolean = false;\r\n    let isVerticallyScrollable: boolean = false;\r\n    let isHorizontallyScrollable: boolean = false;\r\n\r\n    // Check if vertical scrollbar should be displayed\r\n    if (this.track === 'all' || this.track === 'vertical') {\r\n      isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;\r\n      verticalUsed = this.visibility === 'always' || isVerticallyScrollable;\r\n    }\r\n    // Check if horizontal scrollbar should be displayed\r\n    if (this.track === 'all' || this.track === 'horizontal') {\r\n      isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;\r\n      horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;\r\n    }\r\n\r\n    this._updateState({\r\n      position: this.position,\r\n      track: this.track,\r\n      appearance: this.appearance,\r\n      visibility: this.visibility,\r\n      disabled: this.disabled,\r\n      dir: this.dir.value,\r\n      verticalUsed,\r\n      horizontalUsed,\r\n      isVerticallyScrollable,\r\n      isHorizontallyScrollable\r\n    });\r\n  }\r\n\r\n  private _updateState(state: NgScrollbarState) {\r\n    this.state = { ...this.state, ...state };\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  setHovered(hovered: ScrollbarHovered) {\r\n    this.zone.run(() => this._updateState({ ...hovered }));\r\n  }\r\n\r\n  setDragging(dragging: ScrollbarDragging) {\r\n    this.zone.run(() => this._updateState({ ...dragging }));\r\n  }\r\n\r\n  /**\r\n   * Set the viewport based on user choice\r\n   */\r\n  private setViewport() {\r\n    if (this.customViewPort) {\r\n      // Set the custom viewport as the scroll viewport\r\n      this.viewport = this.customViewPort.viewPort.nativeElement;\r\n      // In this case the default viewport and the default content wrapper will act as a mask\r\n      this.viewportClasses = {\r\n        'ng-scroll-offset': true,\r\n        'ng-scroll-layer': true\r\n      };\r\n      this.defaultViewPort.nativeElement.firstElementChild.className = 'ng-scroll-layer';\r\n    } else {\r\n      // Set the default viewport as the scroll viewport\r\n      this.viewport = this.defaultViewPort.nativeElement;\r\n      this.viewportClasses = {\r\n        'ng-scroll-offset': true,\r\n        'ng-scroll-viewport': true,\r\n        [this.viewClass]: true,\r\n      };\r\n    }\r\n    // Check if the custom viewport has only one child and set it as the content wrapper\r\n    if (this.viewport.firstElementChild) {\r\n      this.contentWrapper = this.viewport.firstElementChild as HTMLElement;\r\n      this.contentWrapper.classList.add('ng-scroll-content');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.setViewport();\r\n\r\n      // Initialize scroll streams\r\n      this.scrolled = new Observable((observer: Observer<any>) =>\r\n        fromEvent(this.viewport, 'scroll', { passive: true }).pipe(takeUntil(this.destroyed))\r\n          .subscribe(observer));\r\n\r\n      this.verticalScrolled = this.getScrolledByDirection('vertical');\r\n      this.horizontalScrolled = this.getScrolledByDirection('horizontal');\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.updateState();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n\r\n  /**\r\n   * Update local state and the internal scrollbar controls\r\n   */\r\n  update() {\r\n    this.updated.next();\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Smooth scroll functions\r\n   */\r\n\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void> {\r\n    return this.smoothScroll.scrollTo(this.viewport, options);\r\n  }\r\n\r\n  /**\r\n   * Scroll to element by reference or selector\r\n   */\r\n  scrollToElement(target: SmoothScrollElement, options?): Promise<void> {\r\n    return this.smoothScroll.scrollToElement(this.viewport, target, options);\r\n  }\r\n}\r\n\r\n\r\ninterface ScrollbarDragging {\r\n  verticalDragging?: boolean;\r\n  horizontalDragging?: boolean;\r\n}\r\n\r\ninterface ScrollbarHovered {\r\n  verticalHovered?: boolean;\r\n  horizontalHovered?: boolean;\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { animationFrameScheduler, asyncScheduler, EMPTY, fromEvent, merge, Observable, of, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, mergeMap, pluck, switchMap, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\nexport abstract class ScrollbarRef {\r\n  // Scrollable view element\r\n  protected readonly viewElement: HTMLElement;\r\n  protected readonly trackElement: HTMLElement;\r\n  protected readonly thumbElement: HTMLElement;\r\n\r\n  protected readonly hoveredState: Subject<boolean>;\r\n  protected readonly draggingState: Subject<boolean>;\r\n\r\n  // Pointer events switcher stream\r\n  protected readonly pointerEvents: Subject<boolean>;\r\n\r\n  protected abstract get scrollSize(): number;\r\n\r\n  protected abstract get viewportSize(): number;\r\n\r\n  protected abstract get trackSize(): number;\r\n\r\n  protected abstract get thumbSize(): number;\r\n\r\n  protected abstract get scrollOffset(): number;\r\n\r\n  protected abstract get dragStartOffset(): number;\r\n\r\n  protected abstract get dragOffset(): number;\r\n\r\n  protected abstract get pageProperty(): string;\r\n\r\n  protected abstract get clientProperty(): string;\r\n\r\n  // The available scrollable size\r\n  protected get scrollMax(): number {\r\n    return this.scrollSize - this.viewportSize;\r\n  }\r\n\r\n  protected get trackMax(): number {\r\n    return this.trackSize - this.thumbSize;\r\n  }\r\n\r\n  protected constructor(protected scrollbarRef: NgScrollbar,\r\n                        protected document: any,\r\n                        trackRef: ElementRef,\r\n                        thumbRef: ElementRef,\r\n                        platform: Platform,\r\n                        protected destroyed: Subject<void>) {\r\n    this.viewElement = scrollbarRef.viewport;\r\n    this.trackElement = trackRef.nativeElement;\r\n    this.thumbElement = thumbRef.nativeElement;\r\n\r\n    if (!(platform.IOS || platform.ANDROID)) {\r\n\r\n      this.pointerEvents = new Subject<boolean>();\r\n      this.hoveredState = new Subject<boolean>();\r\n      this.draggingState = new Subject<boolean>();\r\n\r\n      this.draggingState.pipe(\r\n        distinctUntilChanged(),\r\n        tap((state: boolean) => this.setDragging(state)),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n\r\n      const scrollbarClicked = fromEvent(this.viewElement, 'mousedown', { passive: true }).pipe(\r\n        switchMap((e: any) => {\r\n          e.stopPropagation();\r\n          this.document.onselectstart = () => false;\r\n          const isThumbClick = isWithinBounds(e, this.thumbElement.getBoundingClientRect());\r\n          if (isThumbClick && !coerceBooleanProperty(this.scrollbarRef.thumbDragDisabled)) {\r\n            return this.dragged(e);\r\n          } else {\r\n            const isTrackClick = isWithinBounds(e, this.trackElement.getBoundingClientRect());\r\n            if (isTrackClick && !coerceBooleanProperty(this.scrollbarRef.trackClickDisabled)) {\r\n              return this.trackClicked(e);\r\n            }\r\n          }\r\n          return EMPTY;\r\n        })\r\n      );\r\n\r\n      // Activate/Deactivate scrollbar hover event\r\n      const mouseLeave = fromEvent(this.viewElement, 'mouseleave').pipe(\r\n        map((e: any) => {\r\n          e.stopPropagation();\r\n          return false;\r\n        })\r\n      );\r\n      merge(this.pointerEvents, mouseLeave).pipe(distinctUntilChanged()).pipe(\r\n        tap((state: boolean) => this.setHovered(state)),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n\r\n      // Activate/Deactivate scrollTo on scrollbar click event\r\n      this.pointerEvents.pipe(\r\n        distinctUntilChanged(),\r\n        switchMap((state: boolean) => state ? scrollbarClicked : EMPTY),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n\r\n      this.hovered().pipe(\r\n        tap((state: boolean) => this.pointerEvents.next(state)),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n    }\r\n\r\n    // Start updating thumb position when view scrolls\r\n    this.scrolled().pipe(\r\n      tap(() => this.updateThumb()),\r\n      takeUntil(this.destroyed)\r\n    ).subscribe();\r\n\r\n    // Update scrollbar when `NgScrollbar.update()` is called\r\n    this.scrollbarRef.updated.pipe(\r\n      tap(() => this.updateThumb()),\r\n      takeUntil(this.destroyed)\r\n    ).subscribe();\r\n\r\n    // Initialize scrollbar\r\n    asyncScheduler.schedule(() => this.updateThumb(), 100);\r\n  }\r\n\r\n  /**\r\n   * Updates scrollbar's thumb position and size\r\n   */\r\n  protected updateThumb(): void {\r\n    const trackMax = this.trackMax;\r\n    const size = calculateThumbSize(this.trackSize, this.scrollSize, this.scrollbarRef.minThumbSize);\r\n    const position = calculateThumbPosition(this.scrollOffset, this.scrollMax, trackMax);\r\n    animationFrameScheduler.schedule(() => this.applyThumbStyle(size, position, trackMax));\r\n  }\r\n\r\n  dragged(event: any) {\r\n    let trackMax: number;\r\n    let scrollMax: number;\r\n\r\n    const dragStart = of(event).pipe(\r\n      tap(() => {\r\n        // Capture scrollMax and trackMax once\r\n        trackMax = this.trackMax;\r\n        scrollMax = this.scrollMax;\r\n        this.draggingState.next(true);\r\n      }),\r\n    );\r\n\r\n    const dragging = fromEvent(this.document, 'mousemove', { capture: true, passive: true }).pipe(\r\n      tap((e: any) => e.stopPropagation())\r\n    );\r\n\r\n    const dragEnd = fromEvent(this.document, 'mouseup', { capture: true }).pipe(\r\n      tap((e: any) => {\r\n        e.stopPropagation();\r\n        this.document.onselectstart = null;\r\n        this.draggingState.next(false);\r\n      })\r\n    );\r\n\r\n    return dragStart.pipe(\r\n      pluck(this.pageProperty),\r\n      map((pageOffset: number) => pageOffset - this.dragStartOffset),\r\n      mergeMap((mouseDownOffset: number) => dragging.pipe(\r\n        pluck(this.clientProperty),\r\n        // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\r\n        map((mouseOffset: number) => mouseOffset - this.dragOffset),\r\n        map((offset: number) => scrollMax * (offset - mouseDownOffset) / trackMax),\r\n        map((position: number) => this.handleDragPosition(position, scrollMax)),\r\n        tap((value: number) => this.scrollTo(value)),\r\n        takeUntil(dragEnd)\r\n      ))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stream that emits when a scrollbar is hovered\r\n   */\r\n  private hovered(): Observable<boolean> {\r\n    return fromEvent(this.viewElement, 'mousemove', { passive: true }).pipe(\r\n      map((e: any) => {\r\n        e.stopPropagation();\r\n        return isWithinBounds(e, this.trackElement.getBoundingClientRect());\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stream that emits when scrollbar track is clicked\r\n   */\r\n  protected trackClicked(e): Observable<number> {\r\n    return of(e).pipe(\r\n      pluck(this.pageProperty),\r\n      map((pageOffset: number) => pageOffset - this.dragOffset),\r\n      map((clickOffset: number) => {\r\n        const offset = clickOffset - (this.thumbSize / 2);\r\n        const ratio = offset / this.trackSize;\r\n        return ratio * this.scrollSize;\r\n      }),\r\n      tap((value: number) =>\r\n        this.scrollbarRef.scrollTo({\r\n          ...this.mapToScrollToOption(value),\r\n          duration: coerceNumberProperty(this.scrollbarRef.trackClickScrollDuration)\r\n        })\r\n      ),\r\n      tap(() => this.document.onselectstart = null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stream that emits when view is scrolled\r\n   */\r\n  protected abstract scrolled(): Observable<any>;\r\n\r\n  /**\r\n   * Return a scrollTo option parameter\r\n   */\r\n  protected abstract mapToScrollToOption(value: number): ScrollToOptions;\r\n\r\n  /**\r\n   * Updates scrollbar's thumb size and position\r\n   */\r\n  protected abstract applyThumbStyle(size: number, position: number, trackMax?: number): void;\r\n\r\n  /**\r\n   * On drag function\r\n   */\r\n  protected abstract handleDragPosition(position: number, scrollMax: number): number;\r\n\r\n  protected abstract scrollTo(point: number): void;\r\n\r\n  protected abstract setDragging(value: boolean): void;\r\n\r\n  protected abstract setHovered(value: boolean): void;\r\n}\r\n\r\n/**\r\n * Calculate Scrollbar thumb size\r\n * @param trackSize Scrollbar track size\r\n * @param contentSize Content size or Viewport scroll size\r\n * @param minThumbSize Minimum scrollbar thumb size\r\n */\r\nfunction calculateThumbSize(trackSize: number, contentSize: number, minThumbSize: number): number {\r\n  const scrollbarRatio = trackSize / contentSize;\r\n  const thumbSize = scrollbarRatio * trackSize;\r\n  return Math.max(~~thumbSize, minThumbSize);\r\n}\r\n\r\n/**\r\n * Calculate scrollbar thumb position\r\n * @param scrollPosition The scroll position of the viewport\r\n * @param scrollMax The max size available to scroll the viewport\r\n * @param trackMax The max size available to move scrollbar thumb\r\n */\r\nfunction calculateThumbPosition(scrollPosition: number, scrollMax: number, trackMax: number): number {\r\n  return scrollPosition * trackMax / scrollMax;\r\n}\r\n\r\n/**\r\n * Check if pointer is within scrollbar bounds\r\n * @param e Pointer event\r\n * @param rect Scrollbar Client Rect\r\n */\r\nfunction isWithinBounds(e: any, rect: ClientRect): boolean {\r\n  return (\r\n    e.clientX >= rect.left &&\r\n    e.clientX <= rect.left + rect.width &&\r\n    e.clientY >= rect.top &&\r\n    e.clientY <= rect.top + rect.height\r\n  );\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { getRtlScrollAxisType, Platform, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { ScrollbarRef } from './scrollbar-ref';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\nexport class HorizontalScrollbarRef extends ScrollbarRef {\r\n\r\n  protected get scrollSize(): number {\r\n    return this.viewElement.scrollWidth;\r\n  }\r\n\r\n  protected get viewportSize(): number {\r\n    return this.viewElement.clientWidth;\r\n  }\r\n\r\n  protected get trackSize(): number {\r\n    return this.trackElement.clientWidth;\r\n  }\r\n\r\n  protected get thumbSize(): number {\r\n    return this.thumbElement.clientWidth;\r\n  }\r\n\r\n  protected get scrollOffset(): number {\r\n    return this.viewElement.scrollLeft;\r\n  }\r\n\r\n  protected get dragOffset(): number {\r\n    return this.trackElement.getBoundingClientRect().left;\r\n  }\r\n\r\n  protected get dragStartOffset(): number {\r\n    return this.thumbElement.getBoundingClientRect().left;\r\n  }\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageX';\r\n  }\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientX';\r\n  }\r\n\r\n  constructor(protected scrollbarRef: NgScrollbar,\r\n              protected document: any,\r\n              trackRef: ElementRef,\r\n              thumbRef: ElementRef,\r\n              protected platform: Platform,\r\n              protected destroyed: Subject<void>,\r\n              protected dir: Directionality) {\r\n    super(scrollbarRef, document, trackRef, thumbRef, platform, destroyed);\r\n  }\r\n\r\n  private _handleThumbPosition(position: number, trackMax: number) {\r\n    if (this.dir.value === 'rtl') {\r\n      if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return -position;\r\n      }\r\n      if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\r\n        return position - trackMax;\r\n      }\r\n      // Keeping this as a memo\r\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n      //   return position;\r\n      // }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  protected handleDragPosition(position: number): number {\r\n    if (this.dir.value === 'rtl') {\r\n      if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n        return position - this.scrollMax;\r\n      }\r\n      if (this.scrollbarRef.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return this.scrollMax - position;\r\n      }\r\n      // Keeping this as a memo\r\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\r\n      //   return position;\r\n      // }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  protected scrolled(): Observable<any> {\r\n    return this.scrollbarRef.horizontalScrolled;\r\n  }\r\n\r\n  protected applyThumbStyle(size: number, position: number, trackMax?: number): void {\r\n    this.thumbElement.style.width = `${ size }px`;\r\n    this.thumbElement.style.transform = `translate3d(${ this._handleThumbPosition(position, trackMax) }px, 0, 0)`;\r\n  }\r\n\r\n  protected mapToScrollToOption(value: number): ScrollToOptions {\r\n    return { left: value };\r\n  }\r\n\r\n  protected scrollTo(point: number): void {\r\n    this.viewElement.scrollLeft = point;\r\n  }\r\n\r\n  protected setHovered(value: boolean): void {\r\n    this.scrollbarRef.setHovered({ horizontalHovered: value });\r\n  }\r\n\r\n  protected setDragging(value: boolean): void {\r\n    this.scrollbarRef.setDragging({ horizontalDragging: value });\r\n  }\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { ScrollbarRef } from './scrollbar-ref';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\nexport class VerticalScrollbarRef extends ScrollbarRef {\r\n\r\n  protected get scrollSize(): number {\r\n    return this.viewElement.scrollHeight;\r\n  }\r\n\r\n  protected get viewportSize(): number {\r\n    return this.viewElement.clientHeight;\r\n  }\r\n\r\n  protected get trackSize(): number {\r\n    return this.trackElement.clientHeight;\r\n  }\r\n\r\n  protected get thumbSize(): number {\r\n    return this.thumbElement.clientHeight;\r\n  }\r\n\r\n  protected get scrollOffset(): number {\r\n    return this.viewElement.scrollTop;\r\n  }\r\n\r\n  protected get dragOffset(): number {\r\n    return this.trackElement.getBoundingClientRect().top;\r\n  }\r\n\r\n  protected get dragStartOffset(): number {\r\n    return this.thumbElement.getBoundingClientRect().top;\r\n  }\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageY';\r\n  }\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientY';\r\n  }\r\n\r\n  constructor(protected scrollbarRef: NgScrollbar,\r\n              protected document: any,\r\n              trackRef: ElementRef,\r\n              thumbRef: ElementRef,\r\n              platform: Platform,\r\n              protected destroyed: Subject<void>) {\r\n    super(scrollbarRef, document, trackRef, thumbRef, platform, destroyed);\r\n  }\r\n\r\n  protected scrolled(): Observable<any> {\r\n    return this.scrollbarRef.verticalScrolled;\r\n  }\r\n\r\n  protected applyThumbStyle(size: number, position: number): void {\r\n    this.thumbElement.style.height = `${ size }px`;\r\n    this.thumbElement.style.transform = `translate3d(0 ,${ position }px, 0)`;\r\n  }\r\n\r\n  protected mapToScrollToOption(value: number): ScrollToOptions {\r\n    return { top: value };\r\n  }\r\n\r\n  protected handleDragPosition(position: number): number {\r\n    return position;\r\n  }\r\n\r\n  protected scrollTo(point: number): void {\r\n    this.viewElement.scrollTop = point;\r\n  }\r\n\r\n  protected setHovered(value: boolean): void {\r\n    this.scrollbarRef.setHovered({ verticalHovered: value });\r\n  }\r\n\r\n  protected setDragging(value: boolean): void {\r\n    this.scrollbarRef.setDragging({ verticalDragging: value });\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, OnDestroy, ViewChild, Input, Inject, NgZone, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { Subject } from 'rxjs';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\nimport { ScrollbarRef } from '../classes/scrollbar-ref';\r\nimport { HorizontalScrollbarRef } from '../classes/horizontal-scrollbar-ref';\r\nimport { VerticalScrollbarRef } from '../classes/vertical-scrollbar-ref';\r\n\r\n@Component({\r\n  selector: 'scrollbar-control',\r\n  host: {\r\n    '[class.scrollbar-control]': 'true'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./shared.scss', './horizontal.scss', './vertical.scss'],\r\n  template: `\r\n    <div #track class=\"ng-scrollbar-track {{parent.trackClass}}\">\r\n      <div #thumb class=\"ng-scrollbar-thumb {{parent.thumbClass}}\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class ScrollbarControl implements OnInit, OnDestroy {\r\n\r\n  // Custom scrollbar reference\r\n  private scrollbarRef: ScrollbarRef;\r\n\r\n  // The axis of the scrollbar\r\n  @Input() private track: 'horizontal' | 'vertical';\r\n\r\n  // Scrollbar container element reference\r\n  @ViewChild('track', { static: true }) trackRef: ElementRef;\r\n\r\n  // Scrollbar thumb element reference\r\n  @ViewChild('thumb', { static: true }) thumbRef: ElementRef;\r\n\r\n  // Stream that emits to unsubscribe from all streams\r\n  protected readonly destroyed = new Subject<void>();\r\n\r\n  constructor(public parent: NgScrollbar,\r\n              private platform: Platform,\r\n              private dir: Directionality,\r\n              private zone: NgZone,\r\n              @Inject(DOCUMENT) private document: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      // Avoid SSR Error\r\n      if (this.platform.isBrowser) {\r\n        this.scrollbarRef = this.track === 'vertical'\r\n          ? new VerticalScrollbarRef(this.parent, this.document, this.trackRef, this.thumbRef, this.platform, this.destroyed)\r\n          : new HorizontalScrollbarRef(this.parent, this.document, this.trackRef, this.thumbRef, this.platform, this.destroyed, this.dir);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'cssVariable'\r\n})\r\nexport class CssVariable implements PipeTransform {\r\n\r\n  transform(size: number, variableName): SafeHtml {\r\n    return this.sanitizer.bypassSecurityTrustStyle(`--${variableName}: -${size}px`);\r\n  }\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input } from '@angular/core';\r\nimport { NgScrollbarState } from '../ng-scrollbar.model';\r\n\r\n@Directive({ selector: '[ngAttr]' })\r\nexport class NgAttr {\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  @Input() set ngAttr(attrs: NgScrollbarState) {\r\n    for (const [key, value] of Object.entries(attrs)) {\r\n      (this.el.nativeElement as HTMLElement).setAttribute(key, value);\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, Injectable, Inject, AfterContentInit, OnDestroy, NgZone } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { from, of, EMPTY, BehaviorSubject, Observable, Subscription, Observer } from 'rxjs';\r\nimport { catchError, debounceTime, map, switchMap } from 'rxjs/operators';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\n/**\r\n * Factory that initialize the ResizeObserver if available in the browser\r\n * Otherwise, it lazy-loads the ResizeObserver polyfill\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class ResizeObserverFactory {\r\n  private readonly resizeObserverSource = new BehaviorSubject(null);\r\n  readonly resizeObserverLoader = this.resizeObserverSource.asObservable();\r\n\r\n  constructor(@Inject(DOCUMENT) document: any, platform: Platform) {\r\n    if (platform.isBrowser) {\r\n      const resizeObserverApi = document.defaultView.ResizeObserver\r\n        ? of(document.defaultView.ResizeObserver)\r\n        : from(import('@juggle/resize-observer')).pipe(\r\n          map((module: { ResizeObserver: any }) => module.ResizeObserver),\r\n          catchError((e) => {\r\n            console.log('Unable to load ResizeObserver polyfill', e);\r\n            return EMPTY;\r\n          }));\r\n      this.resizeObserverSource.next(resizeObserverApi);\r\n    }\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[resizeSensor]' })\r\nexport class ResizeSensor implements AfterContentInit, OnDestroy {\r\n\r\n  /** Debounce interval for emitting the changes. */\r\n  @Input('sensorDebounce')\r\n  get debounce(): number {\r\n    return this._debounce;\r\n  }\r\n\r\n  set debounce(value: number) {\r\n    this._debounce = coerceNumberProperty(value);\r\n    this._subscribe();\r\n  }\r\n\r\n  private _debounce: number;\r\n\r\n  /** Whether ResizeObserver is disabled. */\r\n  @Input('sensorDisabled')\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: any) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this._unsubscribe() : this._subscribe();\r\n  }\r\n\r\n  private _disabled: boolean = false;\r\n\r\n  private _subscription: Subscription | null = null;\r\n  private _resizeObserver: any;\r\n\r\n  constructor(private zone: NgZone,\r\n              private platform: Platform,\r\n              private resizeObserverFactory: ResizeObserverFactory,\r\n              private scrollbar: NgScrollbar) {\r\n    if (!scrollbar) {\r\n      throw new Error('[NgScrollbar Resize Sensor Directive]: Host element must be an NgScrollbar component.');\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (!this._subscription && !this._disabled) {\r\n      this._subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe();\r\n  }\r\n\r\n  private _createObserver(ResizeObserver: any): Observable<void> {\r\n    return new Observable((observer: Observer<void>) => {\r\n      this._resizeObserver = new ResizeObserver(() => observer.next());\r\n      this._resizeObserver.observe(this.scrollbar.viewport);\r\n      if (this.scrollbar.contentWrapper) {\r\n        this._resizeObserver.observe(this.scrollbar.contentWrapper);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _subscribe() {\r\n    this._unsubscribe();\r\n    if (this.platform.isBrowser) {\r\n      this.zone.runOutsideAngular(() => {\r\n        this._subscription = this.resizeObserverFactory.resizeObserverLoader.pipe(\r\n          switchMap((moduleObservable: Observable<any>) => moduleObservable),\r\n          switchMap((ResizeObserver: any) => {\r\n            if (ResizeObserver) {\r\n              const stream = this._createObserver(ResizeObserver);\r\n              return this.debounce ? stream.pipe(debounceTime(this._debounce)) : stream;\r\n            } else {\r\n              return EMPTY;\r\n            }\r\n          })\r\n        ).subscribe(() => this.scrollbar.update());\r\n      });\r\n    }\r\n  }\r\n\r\n  private _unsubscribe() {\r\n    if (this._resizeObserver) {\r\n      this._resizeObserver.disconnect();\r\n    }\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';\r\n// Uncomment the following line in development mode\r\n// import { SmoothScrollModule } from '../../smooth-scroll/src/public_api';\r\n\r\nimport { NgScrollbar } from './ng-scrollbar';\r\nimport { ScrollbarControl } from './scrollbar-control/scrollbar-control';\r\nimport { ScrollViewport } from './scroll-viewport';\r\nimport { CssVariable } from './utils/css-variable.pipe';\r\nimport { NgAttr } from './utils/ng-attr.directive';\r\nimport { ResizeSensor } from './utils/resize-sensor.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BidiModule,\r\n    PortalModule,\r\n    PlatformModule,\r\n    SmoothScrollModule\r\n  ],\r\n  declarations: [\r\n    NgScrollbar,\r\n    ScrollbarControl,\r\n    ScrollViewport,\r\n    CssVariable,\r\n    NgAttr,\r\n    ResizeSensor\r\n  ],\r\n  exports: [\r\n    NgScrollbar,\r\n    ScrollViewport\r\n  ]\r\n})\r\nexport class NgScrollbarModule {\r\n}\r\n"]}