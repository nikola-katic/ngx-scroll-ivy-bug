/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ScrollbarRef } from './scrollbar-ref';
export class VerticalScrollbarRef extends ScrollbarRef {
    /**
     * @param {?} scrollbarRef
     * @param {?} document
     * @param {?} trackRef
     * @param {?} thumbRef
     * @param {?} platform
     * @param {?} destroyed
     */
    constructor(scrollbarRef, document, trackRef, thumbRef, platform, destroyed) {
        super(scrollbarRef, document, trackRef, thumbRef, platform, destroyed);
        this.scrollbarRef = scrollbarRef;
        this.document = document;
        this.destroyed = destroyed;
    }
    /**
     * @protected
     * @return {?}
     */
    get scrollSize() {
        return this.viewElement.scrollHeight;
    }
    /**
     * @protected
     * @return {?}
     */
    get viewportSize() {
        return this.viewElement.clientHeight;
    }
    /**
     * @protected
     * @return {?}
     */
    get trackSize() {
        return this.trackElement.clientHeight;
    }
    /**
     * @protected
     * @return {?}
     */
    get thumbSize() {
        return this.thumbElement.clientHeight;
    }
    /**
     * @protected
     * @return {?}
     */
    get scrollOffset() {
        return this.viewElement.scrollTop;
    }
    /**
     * @protected
     * @return {?}
     */
    get dragOffset() {
        return this.trackElement.getBoundingClientRect().top;
    }
    /**
     * @protected
     * @return {?}
     */
    get dragStartOffset() {
        return this.thumbElement.getBoundingClientRect().top;
    }
    /**
     * @protected
     * @return {?}
     */
    get pageProperty() {
        return 'pageY';
    }
    /**
     * @protected
     * @return {?}
     */
    get clientProperty() {
        return 'clientY';
    }
    /**
     * @protected
     * @return {?}
     */
    scrolled() {
        return this.scrollbarRef.verticalScrolled;
    }
    /**
     * @protected
     * @param {?} size
     * @param {?} position
     * @return {?}
     */
    applyThumbStyle(size, position) {
        this.thumbElement.style.height = `${size}px`;
        this.thumbElement.style.transform = `translate3d(0 ,${position}px, 0)`;
    }
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    mapToScrollToOption(value) {
        return { top: value };
    }
    /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    handleDragPosition(position) {
        return position;
    }
    /**
     * @protected
     * @param {?} point
     * @return {?}
     */
    scrollTo(point) {
        this.viewElement.scrollTop = point;
    }
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    setHovered(value) {
        this.scrollbarRef.setHovered({ verticalHovered: value });
    }
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    setDragging(value) {
        this.scrollbarRef.setDragging({ verticalDragging: value });
    }
}
if (false) {
    /**
     * @type {?}
     * @protected
     */
    VerticalScrollbarRef.prototype.scrollbarRef;
    /**
     * @type {?}
     * @protected
     */
    VerticalScrollbarRef.prototype.document;
    /**
     * @type {?}
     * @protected
     */
    VerticalScrollbarRef.prototype.destroyed;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVydGljYWwtc2Nyb2xsYmFyLXJlZi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1zY3JvbGxiYXIvIiwic291cmNlcyI6WyJsaWIvY2xhc3Nlcy92ZXJ0aWNhbC1zY3JvbGxiYXItcmVmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFJQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHL0MsTUFBTSxPQUFPLG9CQUFxQixTQUFRLFlBQVk7Ozs7Ozs7OztJQXNDcEQsWUFBc0IsWUFBeUIsRUFDekIsUUFBYSxFQUN2QixRQUFvQixFQUNwQixRQUFvQixFQUNwQixRQUFrQixFQUNSLFNBQXdCO1FBQzVDLEtBQUssQ0FBQyxZQUFZLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBTm5ELGlCQUFZLEdBQVosWUFBWSxDQUFhO1FBQ3pCLGFBQVEsR0FBUixRQUFRLENBQUs7UUFJYixjQUFTLEdBQVQsU0FBUyxDQUFlO0lBRTlDLENBQUM7Ozs7O0lBM0NELElBQWMsVUFBVTtRQUN0QixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDO0lBQ3ZDLENBQUM7Ozs7O0lBRUQsSUFBYyxZQUFZO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUM7SUFDdkMsQ0FBQzs7Ozs7SUFFRCxJQUFjLFNBQVM7UUFDckIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQztJQUN4QyxDQUFDOzs7OztJQUVELElBQWMsU0FBUztRQUNyQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDO0lBQ3hDLENBQUM7Ozs7O0lBRUQsSUFBYyxZQUFZO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUM7SUFDcEMsQ0FBQzs7Ozs7SUFFRCxJQUFjLFVBQVU7UUFDdEIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLHFCQUFxQixFQUFFLENBQUMsR0FBRyxDQUFDO0lBQ3ZELENBQUM7Ozs7O0lBRUQsSUFBYyxlQUFlO1FBQzNCLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLEdBQUcsQ0FBQztJQUN2RCxDQUFDOzs7OztJQUVELElBQWMsWUFBWTtRQUN4QixPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDOzs7OztJQUVELElBQWMsY0FBYztRQUMxQixPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDOzs7OztJQVdTLFFBQVE7UUFDaEIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDO0lBQzVDLENBQUM7Ozs7Ozs7SUFFUyxlQUFlLENBQUMsSUFBWSxFQUFFLFFBQWdCO1FBQ3RELElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxHQUFJLElBQUssSUFBSSxDQUFDO1FBQy9DLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxrQkFBbUIsUUFBUyxRQUFRLENBQUM7SUFDM0UsQ0FBQzs7Ozs7O0lBRVMsbUJBQW1CLENBQUMsS0FBYTtRQUN6QyxPQUFPLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxDQUFDO0lBQ3hCLENBQUM7Ozs7OztJQUVTLGtCQUFrQixDQUFDLFFBQWdCO1FBQzNDLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Ozs7OztJQUVTLFFBQVEsQ0FBQyxLQUFhO1FBQzlCLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUNyQyxDQUFDOzs7Ozs7SUFFUyxVQUFVLENBQUMsS0FBYztRQUNqQyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQzNELENBQUM7Ozs7OztJQUVTLFdBQVcsQ0FBQyxLQUFjO1FBQ2xDLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUM3RCxDQUFDO0NBQ0Y7Ozs7OztJQXJDYSw0Q0FBbUM7Ozs7O0lBQ25DLHdDQUF1Qjs7Ozs7SUFJdkIseUNBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQbGF0Zm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuXHJcbmltcG9ydCB7IFNjcm9sbGJhclJlZiB9IGZyb20gJy4vc2Nyb2xsYmFyLXJlZic7XHJcbmltcG9ydCB7IE5nU2Nyb2xsYmFyIH0gZnJvbSAnLi4vbmctc2Nyb2xsYmFyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBWZXJ0aWNhbFNjcm9sbGJhclJlZiBleHRlbmRzIFNjcm9sbGJhclJlZiB7XHJcblxyXG4gIHByb3RlY3RlZCBnZXQgc2Nyb2xsU2l6ZSgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMudmlld0VsZW1lbnQuc2Nyb2xsSGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGdldCB2aWV3cG9ydFNpemUoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLnZpZXdFbGVtZW50LmNsaWVudEhlaWdodDtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBnZXQgdHJhY2tTaXplKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy50cmFja0VsZW1lbnQuY2xpZW50SGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGdldCB0aHVtYlNpemUoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLnRodW1iRWxlbWVudC5jbGllbnRIZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0IHNjcm9sbE9mZnNldCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMudmlld0VsZW1lbnQuc2Nyb2xsVG9wO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGdldCBkcmFnT2Zmc2V0KCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy50cmFja0VsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGdldCBkcmFnU3RhcnRPZmZzZXQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLnRodW1iRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0IHBhZ2VQcm9wZXJ0eSgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuICdwYWdlWSc7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0IGNsaWVudFByb3BlcnR5KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gJ2NsaWVudFknO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHNjcm9sbGJhclJlZjogTmdTY3JvbGxiYXIsXHJcbiAgICAgICAgICAgICAgcHJvdGVjdGVkIGRvY3VtZW50OiBhbnksXHJcbiAgICAgICAgICAgICAgdHJhY2tSZWY6IEVsZW1lbnRSZWYsXHJcbiAgICAgICAgICAgICAgdGh1bWJSZWY6IEVsZW1lbnRSZWYsXHJcbiAgICAgICAgICAgICAgcGxhdGZvcm06IFBsYXRmb3JtLFxyXG4gICAgICAgICAgICAgIHByb3RlY3RlZCBkZXN0cm95ZWQ6IFN1YmplY3Q8dm9pZD4pIHtcclxuICAgIHN1cGVyKHNjcm9sbGJhclJlZiwgZG9jdW1lbnQsIHRyYWNrUmVmLCB0aHVtYlJlZiwgcGxhdGZvcm0sIGRlc3Ryb3llZCk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgc2Nyb2xsZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybiB0aGlzLnNjcm9sbGJhclJlZi52ZXJ0aWNhbFNjcm9sbGVkO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGFwcGx5VGh1bWJTdHlsZShzaXplOiBudW1iZXIsIHBvc2l0aW9uOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIHRoaXMudGh1bWJFbGVtZW50LnN0eWxlLmhlaWdodCA9IGAkeyBzaXplIH1weGA7XHJcbiAgICB0aGlzLnRodW1iRWxlbWVudC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlM2QoMCAsJHsgcG9zaXRpb24gfXB4LCAwKWA7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgbWFwVG9TY3JvbGxUb09wdGlvbih2YWx1ZTogbnVtYmVyKTogU2Nyb2xsVG9PcHRpb25zIHtcclxuICAgIHJldHVybiB7IHRvcDogdmFsdWUgfTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBoYW5kbGVEcmFnUG9zaXRpb24ocG9zaXRpb246IG51bWJlcik6IG51bWJlciB7XHJcbiAgICByZXR1cm4gcG9zaXRpb247XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgc2Nyb2xsVG8ocG9pbnQ6IG51bWJlcik6IHZvaWQge1xyXG4gICAgdGhpcy52aWV3RWxlbWVudC5zY3JvbGxUb3AgPSBwb2ludDtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBzZXRIb3ZlcmVkKHZhbHVlOiBib29sZWFuKTogdm9pZCB7XHJcbiAgICB0aGlzLnNjcm9sbGJhclJlZi5zZXRIb3ZlcmVkKHsgdmVydGljYWxIb3ZlcmVkOiB2YWx1ZSB9KTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBzZXREcmFnZ2luZyh2YWx1ZTogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgdGhpcy5zY3JvbGxiYXJSZWYuc2V0RHJhZ2dpbmcoeyB2ZXJ0aWNhbERyYWdnaW5nOiB2YWx1ZSB9KTtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ==